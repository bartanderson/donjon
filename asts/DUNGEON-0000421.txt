json.body[1].expression.arguments[1].body.body[10].body.body[25].body.expression.expressions[1].right.left.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[25].body.expression.expressions[1].right.operator = "|=";
json.body[1].expression.arguments[1].body.body[10].body.body[25].body.expression.expressions[1].right.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[25].body.expression.expressions[1].right.right.raw = "16";
json.body[1].expression.arguments[1].body.body[10].body.body[25].body.expression.expressions[1].right.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[10].body.body[25].body.expression.expressions[1].right.right.value = 16;
json.body[1].expression.arguments[1].body.body[10].body.body[25].body.expression.expressions[1].right.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[25].body.expression.expressions[1].type = "LogicalExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[25].body.expression.type = "SequenceExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[25].body.type = "ExpressionStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[25].init = {};
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.left.name = "e";
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.operator = "=";
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.right.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.right.left.name = "b";
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.right.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.right.operator = "-";
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.right.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.right.right.raw = "1";
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.right.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.right.right.value = 1;
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.right.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[25].init.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[25].test = {};
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.left.name = "e";
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.operator = "<=";
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.right.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.right.left.name = "d";
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.right.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.right.operator = "+";
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.right.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.right.right.raw = "1";
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.right.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.right.right.value = 1;
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.right.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[25].test.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[25].type = "ForStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[25].update = {};
json.body[1].expression.arguments[1].body.body[10].body.body[25].update.argument = {};
json.body[1].expression.arguments[1].body.body[10].body.body[25].update.argument.name = "e";
json.body[1].expression.arguments[1].body.body[10].body.body[25].update.argument.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[25].update.operator = "++";
json.body[1].expression.arguments[1].body.body[10].body.body[25].update.prefix = false;
json.body[1].expression.arguments[1].body.body[10].body.body[25].update.type = "UpdateExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[26] = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].body = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions = [];
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[0] = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[0].left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[0].left.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[0].left.left.computed = true;
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[0].left.left.object = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[0].left.left.object.computed = true;
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[0].left.left.object.object = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[0].left.left.object.object.computed = false;
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[0].left.left.object.object.object = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[0].left.left.object.object.object.name = "a";
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[0].left.left.object.object.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[0].left.left.object.object.property = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[0].left.left.object.object.property.name = "cell";
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[0].left.left.object.object.property.type = "Identifier";
