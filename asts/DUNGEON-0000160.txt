json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[0].init.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[0].type = "VariableDeclarator";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].id = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].id.name = "q";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].id.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.arguments = [];
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.arguments[0] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.arguments[0].left = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.arguments[0].left.name = "l";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.arguments[0].left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.arguments[0].operator = "/";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.arguments[0].right = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.arguments[0].right.raw = "4";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.arguments[0].right.type = "Literal";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.arguments[0].right.value = 4;
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.arguments[0].type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.callee = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.callee.computed = false;
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.callee.object = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.callee.object.name = "Math";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.callee.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.callee.property = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.callee.property.name = "floor";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[1].declarations[1].init.callee.property.type = "Identifier";
