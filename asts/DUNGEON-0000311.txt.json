{
  "body": [
    null,
    {
      "expression": {
        "arguments": [
          null,
          {
            "body": {
              "body": [
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                {
                  "body": {
                    "body": [
                      null,
                      {
                        "body": {
                          "body": [
                            null,
                            {
                              "body": {
                                "consequent": {
                                  "expression": {
                                    "left": {
                                      "type": "MemberExpression"
                                    },
                                    "operator": "=",
                                    "right": {
                                      "raw": "1",
                                      "type": "Literal",
                                      "value": 1
                                    },
                                    "type": "AssignmentExpression"
                                  },
                                  "type": "ExpressionStatement"
                                },
                                "test": {
                                  "left": {
                                    "left": {
                                      "name": "c",
                                      "type": "Identifier"
                                    },
                                    "operator": "<",
                                    "right": {
                                      "name": "d",
                                      "type": "Identifier"
                                    },
                                    "type": "BinaryExpression"
                                  },
                                  "operator": "||",
                                  "right": {
                                    "left": {
                                      "name": "c",
                                      "type": "Identifier"
                                    },
                                    "operator": ">",
                                    "right": {
                                      "name": "g",
                                      "type": "Identifier"
                                    },
                                    "type": "BinaryExpression"
                                  },
                                  "type": "LogicalExpression"
                                },
                                "type": "IfStatement"
                              },
                              "init": {
                                "left": {
                                  "name": "c",
                                  "type": "Identifier"
                                },
                                "operator": "=",
                                "right": {
                                  "raw": "0",
                                  "type": "Literal",
                                  "value": 0
                                },
                                "type": "AssignmentExpression"
                              },
                              "test": {
                                "left": {
                                  "name": "c",
                                  "type": "Identifier"
                                },
                                "operator": "<=",
                                "right": {
                                  "computed": false,
                                  "object": {
                                    "name": "a",
                                    "type": "Identifier"
                                  },
                                  "property": {
                                    "name": "n_cols",
                                    "type": "Identifier"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    }
  ]
}
