json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.left.right.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.left.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.operator = "&&";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments = [];
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[0] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[0].name = "compositeMapLayer";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[1] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[1].raw = "0";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[1].type = "Literal";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[1].value = 0;
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[2] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[2].raw = "0";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[2].type = "Literal";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[2].value = 0;
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[3] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[3].name = "l";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[3].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[4] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[4].name = "q";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[4].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[5] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[5].name = "p";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.arguments[5].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.callee = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.callee.name = "fill_rect";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.callee.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.right.type = "CallExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].expression.type = "LogicalExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[3].type = "ExpressionStatement";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression.alternate = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression.alternate.left = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression.alternate.left.left = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression.alternate.left.left.name = "p";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression.alternate.left.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression.alternate.left.operator = "=";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression.alternate.left.right = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression.alternate.left.right.computed = false;
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression.alternate.left.right.object = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression.alternate.left.right.object.name = "w";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression.alternate.left.right.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression.alternate.left.right.property = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression.alternate.left.right.property.name = "grid";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[5].body[4].expression.alternate.left.right.property.type = "Identifier";
