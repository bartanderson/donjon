json.body[1].expression.arguments[1].body.body[9].body.body[3].expression.left.right.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[9].body.body[3].expression.left.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[9].body.body[3].expression.operator = "&&";
json.body[1].expression.arguments[1].body.body[9].body.body[3].expression.right = {};
json.body[1].expression.arguments[1].body.body[9].body.body[3].expression.right.left = {};
json.body[1].expression.arguments[1].body.body[9].body.body[3].expression.right.left.name = "b";
json.body[1].expression.arguments[1].body.body[9].body.body[3].expression.right.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[9].body.body[3].expression.right.operator = "/=";
json.body[1].expression.arguments[1].body.body[9].body.body[3].expression.right.right = {};
json.body[1].expression.arguments[1].body.body[9].body.body[3].expression.right.right.raw = "13";
json.body[1].expression.arguments[1].body.body[9].body.body[3].expression.right.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[9].body.body[3].expression.right.right.value = 13;
json.body[1].expression.arguments[1].body.body[9].body.body[3].expression.right.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[9].body.body[3].expression.type = "LogicalExpression";
json.body[1].expression.arguments[1].body.body[9].body.body[3].type = "ExpressionStatement";
json.body[1].expression.arguments[1].body.body[9].body.body[4] = {};
json.body[1].expression.arguments[1].body.body[9].body.body[4].argument = {};
json.body[1].expression.arguments[1].body.body[9].body.body[4].argument.name = "b";
json.body[1].expression.arguments[1].body.body[9].body.body[4].argument.type = "Identifier";
json.body[1].expression.arguments[1].body.body[9].body.body[4].type = "ReturnStatement";
json.body[1].expression.arguments[1].body.body[9].body.type = "BlockStatement";
json.body[1].expression.arguments[1].body.body[9].expression = false;
json.body[1].expression.arguments[1].body.body[9].generator = false;
json.body[1].expression.arguments[1].body.body[9].id = {};
json.body[1].expression.arguments[1].body.body[9].id.name = "calculateRoomCount";
json.body[1].expression.arguments[1].body.body[9].id.type = "Identifier";
json.body[1].expression.arguments[1].body.body[9].params = [];
json.body[1].expression.arguments[1].body.body[9].params[0] = {};
json.body[1].expression.arguments[1].body.body[9].params[0].name = "a";
json.body[1].expression.arguments[1].body.body[9].params[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[9].params[1] = {};
json.body[1].expression.arguments[1].body.body[9].params[1].name = "b";
json.body[1].expression.arguments[1].body.body[9].params[1].type = "Identifier";
json.body[1].expression.arguments[1].body.body[9].type = "FunctionDeclaration";
json.body[1].expression.arguments[1].body.body[10] = {};
json.body[1].expression.arguments[1].body.body[10].async = false;
json.body[1].expression.arguments[1].body.body[10].body = {};
json.body[1].expression.arguments[1].body.body[10].body.body = [];
json.body[1].expression.arguments[1].body.body[10].body.body[0] = {};
json.body[1].expression.arguments[1].body.body[10].body.body[0].alternate = null;
json.body[1].expression.arguments[1].body.body[10].body.body[0].consequent = {};
json.body[1].expression.arguments[1].body.body[10].body.body[0].consequent.argument = {};
json.body[1].expression.arguments[1].body.body[10].body.body[0].consequent.argument.name = "a";
json.body[1].expression.arguments[1].body.body[10].body.body[0].consequent.argument.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[0].consequent.type = "ReturnStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[0].test = {};
json.body[1].expression.arguments[1].body.body[10].body.body[0].test.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[0].test.left.raw = "999";
json.body[1].expression.arguments[1].body.body[10].body.body[0].test.left.type = "Literal";
json.body[1].expression.arguments[1].body.body[10].body.body[0].test.left.value = 999;
json.body[1].expression.arguments[1].body.body[10].body.body[0].test.operator = "==";
json.body[1].expression.arguments[1].body.body[10].body.body[0].test.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[0].test.right.computed = false;
json.body[1].expression.arguments[1].body.body[10].body.body[0].test.right.object = {};
json.body[1].expression.arguments[1].body.body[10].body.body[0].test.right.object.name = "a";
json.body[1].expression.arguments[1].body.body[10].body.body[0].test.right.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[0].test.right.property = {};
json.body[1].expression.arguments[1].body.body[10].body.body[0].test.right.property.name = "n_rooms";
json.body[1].expression.arguments[1].body.body[10].body.body[0].test.right.property.type = "Identifier";
