{
  "body": [
    null,
    {
      "expression": {
        "arguments": [
          null,
          {
            "body": {
              "body": [
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                {
                  "body": {
                    "body": [
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      {
                        "test": {
                          "right": {
                            "right": {
                              "type": "MemberExpression"
                            },
                            "type": "BinaryExpression"
                          },
                          "type": "LogicalExpression"
                        },
                        "type": "IfStatement"
                      },
                      {
                        "body": {
                          "body": [
                            {
                              "declarations": [
                                {
                                  "id": {
                                    "name": "k",
                                    "type": "Identifier"
                                  },
                                  "init": {
                                    "properties": [],
                                    "type": "ObjectExpression"
                                  },
                                  "type": "VariableDeclarator"
                                }
                              ],
                              "kind": "var",
                              "type": "VariableDeclaration"
                            },
                            {
                              "body": {
                                "body": {
                                  "body": [
                                    {
                                      "alternate": null,
                                      "consequent": {
                                        "body": [
                                          {
                                            "expression": {
                                              "left": {
                                                "name": "k",
                                                "type": "Identifier"
                                              },
                                              "operator": "=",
                                              "right": {
                                                "properties": [
                                                  {
                                                    "computed": false,
                                                    "key": {
                                                      "name": "blocked",
                                                      "type": "Identifier"
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false,
                                                    "type": "Property",
                                                    "value": {
                                                      "raw": "1",
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  }
                                                ],
                                                "type": "ObjectExpression"
                                              },
                                              "type": "AssignmentExpression"
                                            },
                                            "type": "ExpressionStatement"
                                          },
                                          {
                                            "label": {
                                              "name": "a",
                                              "type": "Identifier"
                                            },
                                            "type": "BreakStatement"
                                          }
                                        ],
                                        "type": "BlockStatement"
                                      },
                                      "test": {
                                        "left": {
                                          "computed": true,
                                          "object": {
                                            "computed": true,
                                            "object": {
                                              "computed": false,
                                              "object": {
                                                "name": "a",
                                                "type": "Identifier"
                                              },
                                              "property": {
                                                "name": "cell",
                                                "type": "Identifier"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    }
  ]
}
