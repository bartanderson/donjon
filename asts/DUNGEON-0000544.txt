json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.left.right.right.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.left.right.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.left.type = "LogicalExpression";
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.operator = "&&";
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.right = {};
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.right.arguments = [];
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.right.arguments[0] = {};
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.right.arguments[0].name = "optionalPreferredDirection";
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.right.arguments[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.right.callee = {};
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.right.callee.computed = false;
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.right.callee.object = {};
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.right.callee.object.name = "f";
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.right.callee.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.right.callee.property = {};
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.right.callee.property.name = "unshift";
json.body[1].expression.arguments[1].body.body[16].body.body[1].expression.right.callee.property.type = "Identifier";
