json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.consequent.expressions[2].left.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.consequent.expressions[2].operator = "=";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.consequent.expressions[2].right = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.consequent.expressions[2].right.raw = "\"Locked Door\"";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.consequent.expressions[2].right.type = "Literal";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.consequent.expressions[2].right.value = "Locked Door";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.consequent.expressions[2].type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.consequent.type = "SequenceExpression";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.test = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.test.left = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.test.left.raw = "262144";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.test.left.type = "Literal";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.test.left.value = 262144;
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.test.operator = "==";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.test.right = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.test.right.name = "d";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.test.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.test.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.alternate.type = "ConditionalExpression";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent.expressions = [];
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent.expressions[0] = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent.expressions[0].left = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent.expressions[0].left.computed = true;
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent.expressions[0].left.object = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent.expressions[0].left.object.computed = true;
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent.expressions[0].left.object.object = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent.expressions[0].left.object.object.computed = false;
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent.expressions[0].left.object.object.object = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent.expressions[0].left.object.object.object.name = "a";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent.expressions[0].left.object.object.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent.expressions[0].left.object.object.property = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent.expressions[0].left.object.object.property.name = "cell";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.alternate.consequent.expressions[0].left.object.object.property.type = "Identifier";
