json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.consequent.expressions[2].left.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.consequent.expressions[2].operator = "=";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.consequent.expressions[2].right = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.consequent.expressions[2].right.raw = "\"Archway\"";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.consequent.expressions[2].right.type = "Literal";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.consequent.expressions[2].right.value = "Archway";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.consequent.expressions[2].type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.consequent.type = "SequenceExpression";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.test = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.test.left = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.test.left.raw = "65536";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.test.left.type = "Literal";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.test.left.value = 65536;
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.test.operator = "==";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.test.right = {};
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.test.right.name = "d";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.test.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.test.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[14].body.body[9].expression.type = "ConditionalExpression";
json.body[1].expression.arguments[1].body.body[14].body.body[9].type = "ExpressionStatement";
json.body[1].expression.arguments[1].body.body[14].body.body[10] = {};
json.body[1].expression.arguments[1].body.body[14].body.body[10].expression = {};
json.body[1].expression.arguments[1].body.body[14].body.body[10].expression.left = {};
json.body[1].expression.arguments[1].body.body[14].body.body[10].expression.left.name = "f";
json.body[1].expression.arguments[1].body.body[14].body.body[10].expression.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[14].body.body[10].expression.operator = "&&";
json.body[1].expression.arguments[1].body.body[14].body.body[10].expression.right = {};
json.body[1].expression.arguments[1].body.body[14].body.body[10].expression.right.left = {};
json.body[1].expression.arguments[1].body.body[14].body.body[10].expression.right.left.computed = false;
json.body[1].expression.arguments[1].body.body[14].body.body[10].expression.right.left.object = {};
json.body[1].expression.arguments[1].body.body[14].body.body[10].expression.right.left.object.name = "e";
json.body[1].expression.arguments[1].body.body[14].body.body[10].expression.right.left.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[14].body.body[10].expression.right.left.property = {};
json.body[1].expression.arguments[1].body.body[14].body.body[10].expression.right.left.property.name = "out_id";
json.body[1].expression.arguments[1].body.body[14].body.body[10].expression.right.left.property.type = "Identifier";
