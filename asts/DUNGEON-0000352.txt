json.body[1].expression.arguments[1].body.body[10].body.body[8].expression.right.right.arguments[0].right.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[8].expression.right.right.arguments[0].type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[8].expression.right.right.callee = {};
json.body[1].expression.arguments[1].body.body[10].body.body[8].expression.right.right.callee.name = "random";
json.body[1].expression.arguments[1].body.body[10].body.body[8].expression.right.right.callee.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[8].expression.right.right.type = "CallExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[8].expression.right.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[8].expression.type = "LogicalExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[8].type = "ExpressionStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[9] = {};
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression = {};
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.left.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.left.left.raw = "\"j\"";
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.left.left.type = "Literal";
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.left.left.value = "j";
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.left.operator = "in";
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.left.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.left.right.name = "b";
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.left.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.left.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.operator = "||";
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.right.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.right.left.computed = false;
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.right.left.object = {};
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.right.left.object.name = "b";
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.right.left.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.right.left.property = {};
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.right.left.property.name = "j";
json.body[1].expression.arguments[1].body.body[10].body.body[9].expression.right.left.property.type = "Identifier";
