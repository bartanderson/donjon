json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].body.body[1].expression.right.callee.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].body.body[1].expression.right.type = "CallExpression";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].body.body[1].expression.type = "LogicalExpression";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].body.body[1].type = "ExpressionStatement";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].body.type = "BlockStatement";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].init = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].init.left = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].init.left.name = "c";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].init.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].init.operator = "=";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].init.right = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].init.right.name = "westBoundary";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].init.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].init.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].test = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].test.left = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].test.left.name = "c";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].test.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].test.operator = "<=";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].test.right = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].test.right.name = "eastBoundary";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].test.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].test.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].type = "ForStatement";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].update = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].update.left = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].update.left.name = "c";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].update.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].update.operator = "+=";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].update.right = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].update.right.raw = "2";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].update.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].update.right.value = 2;
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.body[1].update.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].consequent.type = "BlockStatement";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].test = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].test.left = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].test.left.raw = "3";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].test.left.type = "Literal";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].test.left.value = 3;
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].test.operator = "<=";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].test.right = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].test.right.name = "northBoundary";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].test.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].test.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[2].type = "IfStatement";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].alternate = null;
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body = [];
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[0] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[0].declarations = [];
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[0].declarations[0] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[0].declarations[0].id = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[0].declarations[0].id.name = "potentialDoor";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[0].declarations[0].id.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[0].declarations[0].init = null;
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[0].declarations[0].type = "VariableDeclarator";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[0].kind = "let";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[0].type = "VariableDeclaration";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.left = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.left.name = "potentialDoor";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.operator = "=";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments = [];
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[0] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[0].name = "grid";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[1] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[1].name = "roomCriteria";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[1].type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[2] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[2].name = "southBoundary";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[2].type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[3] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[3].name = "c";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[3].type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[4] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[4].raw = "\"south\"";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[4].type = "Literal";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.arguments[4].value = "south";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.callee = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.callee.name = "canDoorBePLaced";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.callee.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.right.type = "CallExpression";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.left.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.operator = "&&";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.right = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.right.arguments = [];
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.right.arguments[0] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.right.arguments[0].name = "potentialDoor";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.right.arguments[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.right.callee = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.right.callee.computed = false;
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.right.callee.object = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.right.callee.object.name = "potentialDoorLocations";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.right.callee.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.right.callee.property = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.right.callee.property.name = "push";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[3].consequent.body.body[1].expression.right.callee.property.type = "Identifier";
