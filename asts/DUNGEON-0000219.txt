json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].test.right.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].test.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].type = "ForStatement";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].update = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].update.argument = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].update.argument.name = "r";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].update.argument.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].update.operator = "++";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].update.prefix = false;
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].update.type = "UpdateExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[7] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[7].expression = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[7].expression.arguments = [];
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[7].expression.arguments[0] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[7].expression.arguments[0].name = "applyWallShading";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[7].expression.arguments[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[7].expression.callee = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[7].expression.callee.name = "draw_pixels";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[7].expression.callee.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[7].expression.type = "CallExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[7].type = "ExpressionStatement";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].type = "BlockStatement";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[8] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[8].expression = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[8].expression.left = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[8].expression.left.computed = false;
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[8].expression.left.object = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[8].expression.left.object.name = "v";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[8].expression.left.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[8].expression.left.property = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[8].expression.left.property.name = "door";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[8].expression.left.property.type = "Identifier";
