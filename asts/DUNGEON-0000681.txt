json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[4].right.left.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[4].right.operator = "/";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[4].right.right = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[4].right.right.left = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[4].right.right.left.raw = "3";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[4].right.right.left.type = "Literal";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[4].right.right.left.value = 3;
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[4].right.right.operator = "*";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[4].right.right.right = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[4].right.right.right.name = "g";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[4].right.right.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[4].right.right.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[4].right.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[4].type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[5] = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[5].left = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[5].left.name = "e";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[5].left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[5].operator = "=";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[5].right = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[5].right.raw = "0";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[5].right.type = "Literal";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[5].right.value = 0;
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.expressions[5].type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.init.type = "SequenceExpression";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.test = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.test.left = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.test.left.name = "e";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.test.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.test.operator = "<";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.test.right = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.test.right.name = "dungeonDimensions";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.test.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.test.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.type = "ForStatement";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.update = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.update.argument = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.update.argument.name = "e";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.update.argument.type = "Identifier";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.update.operator = "++";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.update.prefix = false;
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.consequent.update.type = "UpdateExpression";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.test = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.test.left = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.test.left.raw = "\"vex\"";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.test.left.type = "Literal";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.test.left.value = "vex";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.test.operator = "==";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.test.right = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.test.right.computed = false;
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.test.right.object = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.test.right.object.name = "dungeonConfigObject";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.test.right.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.test.right.property = {};
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.test.right.property.name = "grid";
json.body[1].expression.arguments[1].body.body[25].body.body[0].consequent.alternate.test.right.property.type = "Identifier";
