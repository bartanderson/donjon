json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[1].right.left.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[1].right.operator = "|=";
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[1].right.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[1].right.right.raw = "16";
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[1].right.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[1].right.right.value = 16;
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[1].right.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.expressions[1].type = "LogicalExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.expression.type = "SequenceExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[26].body.type = "ExpressionStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[26].init = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.left.name = "h";
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.operator = "=";
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.right.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.right.left.name = "g";
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.right.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.right.operator = "-";
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.right.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.right.right.raw = "1";
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.right.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.right.right.value = 1;
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.right.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[26].init.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[26].test = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.left.name = "h";
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.operator = "<=";
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.right.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.right.left.name = "c";
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.right.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.right.operator = "+";
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.right.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.right.right.raw = "1";
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.right.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.right.right.value = 1;
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.right.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[26].test.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[26].type = "ForStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[26].update = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].update.argument = {};
json.body[1].expression.arguments[1].body.body[10].body.body[26].update.argument.name = "h";
json.body[1].expression.arguments[1].body.body[10].body.body[26].update.argument.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[26].update.operator = "++";
json.body[1].expression.arguments[1].body.body[10].body.body[26].update.prefix = false;
json.body[1].expression.arguments[1].body.body[10].body.body[26].update.type = "UpdateExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[27] = {};
json.body[1].expression.arguments[1].body.body[10].body.body[27].argument = {};
json.body[1].expression.arguments[1].body.body[10].body.body[27].argument.name = "a";
json.body[1].expression.arguments[1].body.body[10].body.body[27].argument.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[27].type = "ReturnStatement";
json.body[1].expression.arguments[1].body.body[10].body.type = "BlockStatement";
json.body[1].expression.arguments[1].body.body[10].expression = false;
json.body[1].expression.arguments[1].body.body[10].generator = false;
json.body[1].expression.arguments[1].body.body[10].id = {};
json.body[1].expression.arguments[1].body.body[10].id.name = "addRoomToDungeon";
json.body[1].expression.arguments[1].body.body[10].id.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].params = [];
json.body[1].expression.arguments[1].body.body[10].params[0] = {};
json.body[1].expression.arguments[1].body.body[10].params[0].name = "a";
json.body[1].expression.arguments[1].body.body[10].params[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].params[1] = {};
json.body[1].expression.arguments[1].body.body[10].params[1].name = "b";
json.body[1].expression.arguments[1].body.body[10].params[1].type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].type = "FunctionDeclaration";
json.body[1].expression.arguments[1].body.body[11] = {};
json.body[1].expression.arguments[1].body.body[11].async = false;
json.body[1].expression.arguments[1].body.body[11].body = {};
json.body[1].expression.arguments[1].body.body[11].body.body = [];
json.body[1].expression.arguments[1].body.body[11].body.body[0] = {};
json.body[1].expression.arguments[1].body.body[11].body.body[0].argument = {};
json.body[1].expression.arguments[1].body.body[11].body.body[0].argument.left = {};
json.body[1].expression.arguments[1].body.body[11].body.body[0].argument.left.name = "a";
json.body[1].expression.arguments[1].body.body[11].body.body[0].argument.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[11].body.body[0].argument.operator = "-";
json.body[1].expression.arguments[1].body.body[11].body.body[0].argument.right = {};
json.body[1].expression.arguments[1].body.body[11].body.body[0].argument.right.name = "b";
json.body[1].expression.arguments[1].body.body[11].body.body[0].argument.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[11].body.body[0].argument.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[11].body.body[0].type = "ReturnStatement";
json.body[1].expression.arguments[1].body.body[11].body.type = "BlockStatement";
json.body[1].expression.arguments[1].body.body[11].expression = false;
json.body[1].expression.arguments[1].body.body[11].generator = false;
json.body[1].expression.arguments[1].body.body[11].id = {};
json.body[1].expression.arguments[1].body.body[11].id.name = "N";
json.body[1].expression.arguments[1].body.body[11].id.type = "Identifier";
json.body[1].expression.arguments[1].body.body[11].params = [];
json.body[1].expression.arguments[1].body.body[11].params[0] = {};
json.body[1].expression.arguments[1].body.body[11].params[0].name = "a";
json.body[1].expression.arguments[1].body.body[11].params[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[11].params[1] = {};
json.body[1].expression.arguments[1].body.body[11].params[1].name = "b";
json.body[1].expression.arguments[1].body.body[11].params[1].type = "Identifier";
json.body[1].expression.arguments[1].body.body[11].type = "FunctionDeclaration";
json.body[1].expression.arguments[1].body.body[12] = {};
json.body[1].expression.arguments[1].body.body[12].async = false;
json.body[1].expression.arguments[1].body.body[12].body = {};
json.body[1].expression.arguments[1].body.body[12].body.body = [];
json.body[1].expression.arguments[1].body.body[12].body.body[0] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[0].declarations = [];
json.body[1].expression.arguments[1].body.body[12].body.body[0].declarations[0] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[0].declarations[0].id = {};
json.body[1].expression.arguments[1].body.body[12].body.body[0].declarations[0].id.name = "grid";
json.body[1].expression.arguments[1].body.body[12].body.body[0].declarations[0].id.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[0].declarations[0].init = {};
json.body[1].expression.arguments[1].body.body[12].body.body[0].declarations[0].init.computed = false;
json.body[1].expression.arguments[1].body.body[12].body.body[0].declarations[0].init.object = {};
json.body[1].expression.arguments[1].body.body[12].body.body[0].declarations[0].init.object.name = "dungeonLayout";
json.body[1].expression.arguments[1].body.body[12].body.body[0].declarations[0].init.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[0].declarations[0].init.property = {};
json.body[1].expression.arguments[1].body.body[12].body.body[0].declarations[0].init.property.name = "cell";
json.body[1].expression.arguments[1].body.body[12].body.body[0].declarations[0].init.property.type = "Identifier";
