json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.body.body[1].expression.right.left.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.body.body[1].expression.right.operator = "+=";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.body.body[1].expression.right.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.body.body[1].expression.right.right.raw = "1";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.body.body[1].expression.right.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.body.body[1].expression.right.right.value = 1;
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.body.body[1].expression.right.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.body.body[1].expression.type = "LogicalExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.body.body[1].type = "ExpressionStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.body.type = "BlockStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.init = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.init.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.init.left.name = "h";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.init.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.init.operator = "=";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.init.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.init.right.name = "g";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.init.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.init.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.test = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.test.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.test.left.name = "h";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.test.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.test.operator = "<=";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.test.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.test.right.name = "c";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.test.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.test.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.type = "ForStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.update = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.update.argument = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.update.argument.name = "h";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.update.argument.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.update.operator = "++";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.update.prefix = false;
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].body.update.type = "UpdateExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].init = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].init.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].init.left.name = "e";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].init.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].init.operator = "=";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].init.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].init.right.name = "b";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].init.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].init.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].test = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].test.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].test.left.name = "e";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].test.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].test.operator = "<=";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].test.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].test.right.name = "d";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].test.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].test.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].type = "ForStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].update = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].update.argument = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].update.argument.name = "e";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].update.argument.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].update.operator = "++";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].update.prefix = false;
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.body[1].update.type = "UpdateExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[17].body.type = "BlockStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[17].label = {};
json.body[1].expression.arguments[1].body.body[10].body.body[17].label.name = "a";
json.body[1].expression.arguments[1].body.body[10].body.body[17].label.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[17].type = "LabeledStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[18] = {};
json.body[1].expression.arguments[1].body.body[10].body.body[18].alternate = null;
json.body[1].expression.arguments[1].body.body[10].body.body[18].consequent = {};
json.body[1].expression.arguments[1].body.body[10].body.body[18].consequent.argument = {};
json.body[1].expression.arguments[1].body.body[10].body.body[18].consequent.argument.name = "a";
json.body[1].expression.arguments[1].body.body[10].body.body[18].consequent.argument.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[18].consequent.type = "ReturnStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[18].test = {};
json.body[1].expression.arguments[1].body.body[10].body.body[18].test.computed = false;
json.body[1].expression.arguments[1].body.body[10].body.body[18].test.object = {};
json.body[1].expression.arguments[1].body.body[10].body.body[18].test.object.name = "k";
json.body[1].expression.arguments[1].body.body[10].body.body[18].test.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[18].test.property = {};
json.body[1].expression.arguments[1].body.body[10].body.body[18].test.property.name = "blocked";
json.body[1].expression.arguments[1].body.body[10].body.body[18].test.property.type = "Identifier";
