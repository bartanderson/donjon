json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.left.right.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.left.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.operator = "&&";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.arguments = [];
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.arguments[0] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.arguments[0].name = "v";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.arguments[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.arguments[1] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.arguments[1].name = "n";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.arguments[1].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.arguments[2] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.arguments[2].name = "x";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.arguments[2].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.arguments[3] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.arguments[3].name = "q";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.arguments[3].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.callee = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.callee.name = "drawMap";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.callee.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.right.type = "CallExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.alternate.type = "LogicalExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.arguments = [];
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.arguments[0] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.arguments[0].name = "v";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.arguments[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.arguments[1] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.arguments[1].name = "n";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.arguments[1].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.arguments[2] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.arguments[2].name = "x";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.arguments[2].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.arguments[3] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.arguments[3].name = "q";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.arguments[3].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.callee = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.callee.name = "drawMap";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.callee.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.consequent.type = "CallExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.test = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.test.left = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.test.left.name = "x";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.test.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.test.operator = "=";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.test.right = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.test.right.computed = false;
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.test.right.object = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.test.right.object.name = "r";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.test.right.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.test.right.property = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.test.right.property.name = "open_grid";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[3].body[5].expression.test.right.property.type = "Identifier";
