{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "Literal",
        "value": "use strict",
        "raw": "'use strict'"
      },
      "directive": "use strict"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "ArrowFunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "global"
            },
            {
              "type": "Identifier",
              "name": "func"
            }
          ],
          "body": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "func"
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "global"
              }
            ]
          },
          "generator": false,
          "expression": true,
          "async": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "window"
          },
          {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "global"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "rgbToHex"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "red"
                    },
                    {
                      "type": "Identifier",
                      "name": "green"
                    },
                    {
                      "type": "Identifier",
                      "name": "blue"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "hexColor"
                            },
                            "init": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Literal",
                                "value": "#",
                                "raw": "\"#\""
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": "00",
                                              "raw": "\"00\""
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "red"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "toString"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": 16,
                                                  "raw": "16"
                                                }
                                              ]
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "substr"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                              "type": "Literal",
                                              "value": 2,
                                              "raw": "2"
                                            },
                                            "prefix": true
                                          }
                                        ]
                                      },
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": "00",
                                              "raw": "\"00\""
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "green"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "toString"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": 16,
                                                  "raw": "16"
                                                }
                                              ]
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "substr"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                              "type": "Literal",
                                              "value": 2,
                                              "raw": "2"
                                            },
                                            "prefix": true
                                          }
                                        ]
                                      },
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": "00",
                                              "raw": "\"00\""
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "blue"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "toString"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": 16,
                                                  "raw": "16"
                                                }
                                              ]
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "substr"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                              "type": "Literal",
                                              "value": 2,
                                              "raw": "2"
                                            },
                                            "prefix": true
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "join"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "",
                                    "raw": "\"\""
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "kind": "let"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "colorMap"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "hexColor"
                            }
                          },
                          "right": {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Identifier",
                                "name": "red"
                              },
                              {
                                "type": "Identifier",
                                "name": "green"
                              },
                              {
                                "type": "Identifier",
                                "name": "blue"
                              },
                              {
                                "type": "Literal",
                                "value": 255,
                                "raw": "255"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Identifier",
                          "name": "hexColor"
                        }
                      }
                    ]
                  },
                  "generator": false,
                  "expression": false,
                  "async": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "colorToRgb"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "colorCode"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "Identifier",
                            "name": "colorMap"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "colorCode"
                          }
                        },
                        "consequent": {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "colorMap"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "colorCode"
                            }
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "match"
                                },
                                "init": null
                              }
                            ],
                            "kind": "let"
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "rgb"
                                },
                                "init": {
                                  "type": "ConditionalExpression",
                                  "test": {
                                    "type": "LogicalExpression",
                                    "operator": "||",
                                    "left": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "match"
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Literal",
                                            "value": {},
                                            "raw": "/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})/i",
                                            "regex": {
                                              "pattern": "^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})",
                                              "flags": "i"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "exec"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "colorCode"
                                          }
                                        ]
                                      }
                                    },
                                    "right": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "match"
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Literal",
                                            "value": {},
                                            "raw": "/^#([0-9a-f])([0-9a-f])([0-9a-f])/i",
                                            "regex": {
                                              "pattern": "^#([0-9a-f])([0-9a-f])([0-9a-f])",
                                              "flags": "i"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "exec"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "colorCode"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "consequent": {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "parseInt"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "match"
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": 1,
                                              "raw": "1"
                                            }
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 16,
                                            "raw": "16"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "parseInt"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "match"
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": 2,
                                              "raw": "2"
                                            }
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 16,
                                            "raw": "16"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "parseInt"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "match"
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": 3,
                                              "raw": "3"
                                            }
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 16,
                                            "raw": "16"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 255,
                                        "raw": "255"
                                      }
                                    ]
                                  },
                                  "alternate": {
                                    "type": "ConditionalExpression",
                                    "test": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "match"
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Literal",
                                            "value": {},
                                            "raw": "/^rgb\\((\\d+),(\\d+),(\\d+)\\)/i",
                                            "regex": {
                                              "pattern": "^rgb\\((\\d+),(\\d+),(\\d+)\\)",
                                              "flags": "i"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "exec"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "colorCode"
                                          }
                                        ]
                                      }
                                    },
                                    "consequent": {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "parseInt"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "match"
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 1,
                                                "raw": "1"
                                              }
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 10,
                                              "raw": "10"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "parseInt"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "match"
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 2,
                                                "raw": "2"
                                              }
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 10,
                                              "raw": "10"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "parseInt"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "match"
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 3,
                                                "raw": "3"
                                              }
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 10,
                                              "raw": "10"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 255,
                                          "raw": "255"
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "Literal",
                                      "value": false,
                                      "raw": "false"
                                    }
                                  }
                                }
                              }
                            ],
                            "kind": "var"
                          }
                        ]
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "ConditionalExpression",
                          "test": {
                            "type": "Identifier",
                            "name": "rgb"
                          },
                          "consequent": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "colorMap"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "colorCode"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "rgb"
                            }
                          },
                          "alternate": {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0"
                              },
                              {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0"
                              },
                              {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0"
                              },
                              {
                                "type": "Literal",
                                "value": 255,
                                "raw": "255"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "generator": false,
                  "expression": false,
                  "async": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "hsvToRgb"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "hsv"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "hue"
                            },
                            "init": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "hsv"
                              },
                              "property": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0"
                              }
                            }
                          }
                        ],
                        "kind": "let"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "saturation"
                            },
                            "init": {
                              "type": "BinaryExpression",
                              "operator": "/",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "hsv"
                                },
                                "property": {
                                  "type": "Literal",
                                  "value": 2,
                                  "raw": "2"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 100,
                                "raw": "100"
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "hsv"
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "*",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "/",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "hsv"
                                },
                                "property": {
                                  "type": "Literal",
                                  "value": 1,
                                  "raw": "1"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 100,
                                "raw": "100"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "saturation"
                            }
                          }
                        }
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "value"
                            },
                            "init": {
                              "type": "BinaryExpression",
                              "operator": "*",
                              "left": {
                                "type": "Identifier",
                                "name": "hsv"
                              },
                              "right": {
                                "type": "BinaryExpression",
                                "operator": "-",
                                "left": {
                                  "type": "Literal",
                                  "value": 1,
                                  "raw": "1"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Math"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "abs"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "BinaryExpression",
                                      "operator": "-",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "%",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "/",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "hue"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 60,
                                            "raw": "60"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 2,
                                          "raw": "2"
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 1,
                                        "raw": "1"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ],
                        "kind": "let"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "-=",
                          "left": {
                            "type": "Identifier",
                            "name": "saturation"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "hsv"
                          }
                        }
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "red"
                            },
                            "init": {
                              "type": "Literal",
                              "value": 0,
                              "raw": "0"
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "green"
                            },
                            "init": {
                              "type": "Literal",
                              "value": 0,
                              "raw": "0"
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "blue"
                            },
                            "init": {
                              "type": "Literal",
                              "value": 0,
                              "raw": "0"
                            }
                          }
                        ],
                        "kind": "let"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "ConditionalExpression",
                          "test": {
                            "type": "BinaryExpression",
                            "operator": ">",
                            "left": {
                              "type": "Literal",
                              "value": 60,
                              "raw": "60"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "hue"
                            }
                          },
                          "consequent": {
                            "type": "SequenceExpression",
                            "expressions": [
                              {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "red"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "hsv"
                                }
                              },
                              {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "green"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "value"
                                }
                              }
                            ]
                          },
                          "alternate": {
                            "type": "ConditionalExpression",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": ">",
                              "left": {
                                "type": "Literal",
                                "value": 120,
                                "raw": "120"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "hue"
                              }
                            },
                            "consequent": {
                              "type": "SequenceExpression",
                              "expressions": [
                                {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "red"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "value"
                                  }
                                },
                                {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "green"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "hsv"
                                  }
                                }
                              ]
                            },
                            "alternate": {
                              "type": "ConditionalExpression",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": ">",
                                "left": {
                                  "type": "Literal",
                                  "value": 180,
                                  "raw": "180"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "hue"
                                }
                              },
                              "consequent": {
                                "type": "SequenceExpression",
                                "expressions": [
                                  {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "green"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "hsv"
                                    }
                                  },
                                  {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "blue"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "value"
                                    }
                                  }
                                ]
                              },
                              "alternate": {
                                "type": "ConditionalExpression",
                                "test": {
                                  "type": "BinaryExpression",
                                  "operator": ">",
                                  "left": {
                                    "type": "Literal",
                                    "value": 240,
                                    "raw": "240"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "hue"
                                  }
                                },
                                "consequent": {
                                  "type": "SequenceExpression",
                                  "expressions": [
                                    {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "green"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "value"
                                      }
                                    },
                                    {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "blue"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "hsv"
                                      }
                                    }
                                  ]
                                },
                                "alternate": {
                                  "type": "ConditionalExpression",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": ">",
                                    "left": {
                                      "type": "Literal",
                                      "value": 300,
                                      "raw": "300"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "hue"
                                    }
                                  },
                                  "consequent": {
                                    "type": "SequenceExpression",
                                    "expressions": [
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "red"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "value"
                                        }
                                      },
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "blue"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "hsv"
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": {
                                    "type": "SequenceExpression",
                                    "expressions": [
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "red"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "hsv"
                                        }
                                      },
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "blue"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "value"
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "red"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "Math"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "min"
                              }
                            },
                            "arguments": [
                              {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "max"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "floor"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                          "type": "Literal",
                                          "value": 255,
                                          "raw": "255"
                                        },
                                        "right": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "red"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "saturation"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0"
                                  }
                                ]
                              },
                              {
                                "type": "Literal",
                                "value": 255,
                                "raw": "255"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "green"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "Math"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "min"
                              }
                            },
                            "arguments": [
                              {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "max"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "floor"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                          "type": "Literal",
                                          "value": 255,
                                          "raw": "255"
                                        },
                                        "right": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "green"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "saturation"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0"
                                  }
                                ]
                              },
                              {
                                "type": "Literal",
                                "value": 255,
                                "raw": "255"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "blue"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "Math"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "min"
                              }
                            },
                            "arguments": [
                              {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "max"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "floor"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                          "type": "Literal",
                                          "value": 255,
                                          "raw": "255"
                                        },
                                        "right": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "blue"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "saturation"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0"
                                  }
                                ]
                              },
                              {
                                "type": "Literal",
                                "value": 255,
                                "raw": "255"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Identifier",
                              "name": "red"
                            },
                            {
                              "type": "Identifier",
                              "name": "green"
                            },
                            {
                              "type": "Identifier",
                              "name": "blue"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "generator": false,
                  "expression": false,
                  "async": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "setPixel"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "context"
                    },
                    {
                      "type": "Identifier",
                      "name": "x"
                    },
                    {
                      "type": "Identifier",
                      "name": "y"
                    },
                    {
                      "type": "Identifier",
                      "name": "color"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "ConditionalExpression",
                          "test": {
                            "type": "Identifier",
                            "name": "cache"
                          },
                          "consequent": {
                            "type": "ConditionalExpression",
                            "test": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "pixelMap"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "color"
                              }
                            },
                            "consequent": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "pixelMap"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "color"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "push"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "Identifier",
                                      "name": "x"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "y"
                                    }
                                  ]
                                }
                              ]
                            },
                            "alternate": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "pixelMap"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "color"
                                }
                              },
                              "right": {
                                "type": "ArrayExpression",
                                "elements": [
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Identifier",
                                        "name": "x"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "y"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "alternate": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "fillRect"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "context"
                              },
                              {
                                "type": "Identifier",
                                "name": "x"
                              },
                              {
                                "type": "Identifier",
                                "name": "y"
                              },
                              {
                                "type": "Identifier",
                                "name": "x"
                              },
                              {
                                "type": "Identifier",
                                "name": "y"
                              },
                              {
                                "type": "Identifier",
                                "name": "color"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "generator": false,
                  "expression": false,
                  "async": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "fillRect"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "context"
                    },
                    {
                      "type": "Identifier",
                      "name": "x1"
                    },
                    {
                      "type": "Identifier",
                      "name": "y1"
                    },
                    {
                      "type": "Identifier",
                      "name": "x2"
                    },
                    {
                      "type": "Identifier",
                      "name": "y2"
                    },
                    {
                      "type": "Identifier",
                      "name": "color"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "context"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "fillStyle"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "color"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "context"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "fillRect"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "x1"
                            },
                            {
                              "type": "Identifier",
                              "name": "y1"
                            },
                            {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "-",
                                "left": {
                                  "type": "Identifier",
                                  "name": "x2"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "x1"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "1"
                              }
                            },
                            {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "-",
                                "left": {
                                  "type": "Identifier",
                                  "name": "y2"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "y1"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "1"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "generator": false,
                  "expression": false,
                  "async": false
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "colorMap"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": []
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "cache"
                      },
                      "init": {
                        "type": "Literal",
                        "value": false,
                        "raw": "false"
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "pixelMap"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": []
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "new_image"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "element"
                        },
                        {
                          "type": "Identifier",
                          "name": "width"
                        },
                        {
                          "type": "Identifier",
                          "name": "height"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "element"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "$"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "element"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "element"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "width"
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "width"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "element"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "height"
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "height"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "element"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "element"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "getContext"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "2d",
                                    "raw": "\"2d\""
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "fillRect"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "element"
                                },
                                {
                                  "type": "Literal",
                                  "value": 0,
                                  "raw": "0"
                                },
                                {
                                  "type": "Literal",
                                  "value": 0,
                                  "raw": "0"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "width"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "height"
                                },
                                {
                                  "type": "Literal",
                                  "value": "#ffffff",
                                  "raw": "\"#ffffff\""
                                }
                              ]
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Identifier",
                              "name": "element"
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "rgb2hex"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "rgbToHex"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "hsv2hex"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "hsv"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "hsv"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "hsvToRgb"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "hsv"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "rgbToHex"
                              },
                              "arguments": [
                                {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "hsv"
                                  },
                                  "property": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0"
                                  }
                                },
                                {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "hsv"
                                  },
                                  "property": {
                                    "type": "Literal",
                                    "value": 1,
                                    "raw": "1"
                                  }
                                },
                                {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "hsv"
                                  },
                                  "property": {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "2"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "color2rgb"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "colorToRgb"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "rgb2hsv"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "rgb"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "red"
                                },
                                "init": {
                                  "type": "BinaryExpression",
                                  "operator": "/",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "rgb"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": 0,
                                      "raw": "0"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 255,
                                    "raw": "255"
                                  }
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "green"
                                },
                                "init": {
                                  "type": "BinaryExpression",
                                  "operator": "/",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "rgb"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": 1,
                                      "raw": "1"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 255,
                                    "raw": "255"
                                  }
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "blue"
                                },
                                "init": {
                                  "type": "BinaryExpression",
                                  "operator": "/",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "rgb"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": 2,
                                      "raw": "2"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 255,
                                    "raw": "255"
                                  }
                                }
                              }
                            ],
                            "kind": "let"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "rgb"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "max"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "red"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "green"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "blue"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "value"
                                },
                                "init": {
                                  "type": "BinaryExpression",
                                  "operator": "-",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "rgb"
                                  },
                                  "right": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "min"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "red"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "green"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "blue"
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "kind": "let"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "red"
                              },
                              "right": {
                                "type": "BinaryExpression",
                                "operator": "%",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "floor"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                          "type": "Literal",
                                          "value": 60,
                                          "raw": "60"
                                        },
                                        "right": {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "==",
                                            "left": {
                                              "type": "Literal",
                                              "value": 0,
                                              "raw": "0"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "value"
                                            }
                                          },
                                          "consequent": {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0"
                                          },
                                          "alternate": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "==",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "rgb"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "red"
                                              }
                                            },
                                            "consequent": {
                                              "type": "BinaryExpression",
                                              "operator": "%",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "/",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "-",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "green"
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "blue"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 6,
                                                "raw": "6"
                                              }
                                            },
                                            "alternate": {
                                              "type": "ConditionalExpression",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "rgb"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "green"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "/",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "blue"
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "red"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 2,
                                                  "raw": "2"
                                                }
                                              },
                                              "alternate": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "/",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "red"
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "green"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 4,
                                                  "raw": "4"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 360,
                                    "raw": "360"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 360,
                                  "raw": "360"
                                }
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "green"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "min"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "max"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Math"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "floor"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryExpression",
                                            "operator": "*",
                                            "left": {
                                              "type": "Literal",
                                              "value": 100,
                                              "raw": "100"
                                            },
                                            "right": {
                                              "type": "ConditionalExpression",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                  "type": "Literal",
                                                  "value": 0,
                                                  "raw": "0"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "rgb"
                                                }
                                              },
                                              "consequent": {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0"
                                              },
                                              "alternate": {
                                                "type": "BinaryExpression",
                                                "operator": "/",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "rgb"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 100,
                                    "raw": "100"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "rgb"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "min"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "max"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Math"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "floor"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryExpression",
                                            "operator": "*",
                                            "left": {
                                              "type": "Literal",
                                              "value": 100,
                                              "raw": "100"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "rgb"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 100,
                                    "raw": "100"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "ArrayExpression",
                              "elements": [
                                {
                                  "type": "Identifier",
                                  "name": "red"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "green"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "rgb"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "hsv2rgb"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "hsvToRgb"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "set_pixel"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "setPixel"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "cache_pixels"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "value"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "cache"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "value"
                              }
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "draw_pixels"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "context"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "width"
                                },
                                "init": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "context"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "canvas"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "width"
                                  }
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "imageData"
                                },
                                "init": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "context"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "getImageData"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": 0,
                                      "raw": "0"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": 0,
                                      "raw": "0"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "width"
                                    },
                                    {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "context"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "canvas"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "height"
                                      }
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "let"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Object"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "keys"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "pixelMap"
                                    }
                                  ]
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "forEach"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "color"
                                    }
                                  ],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "rgb"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "colorToRgb"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "color"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "let"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "pixelMap"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "color"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "forEach"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrowFunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "pixel"
                                                }
                                              ],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "pixel"
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<<",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "*",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "pixel"
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "1"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "width"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "pixel"
                                                            },
                                                            "property": {
                                                              "type": "Literal",
                                                              "value": 0,
                                                              "raw": "0"
                                                            }
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 2,
                                                          "raw": "2"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "i"
                                                        },
                                                        "init": null
                                                      }
                                                    ],
                                                    "kind": "let"
                                                  },
                                                  {
                                                    "type": "ForStatement",
                                                    "init": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                      }
                                                    },
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": ">",
                                                      "left": {
                                                        "type": "Literal",
                                                        "value": 4,
                                                        "raw": "4"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      }
                                                    },
                                                    "update": {
                                                      "type": "UpdateExpression",
                                                      "operator": "++",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "prefix": false
                                                    },
                                                    "body": {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "imageData"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "data"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "pixel"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            }
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "rgb"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "generator": false,
                                              "expression": false,
                                              "async": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "generator": false,
                                  "expression": false,
                                  "async": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "context"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "putImageData"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "imageData"
                                },
                                {
                                  "type": "Literal",
                                  "value": 0,
                                  "raw": "0"
                                },
                                {
                                  "type": "Literal",
                                  "value": 0,
                                  "raw": "0"
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "cache"
                              },
                              "right": {
                                "type": "Literal",
                                "value": false,
                                "raw": "false"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "pixelMap"
                              },
                              "right": {
                                "type": "ObjectExpression",
                                "properties": []
                              }
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "draw_line"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "context"
                        },
                        {
                          "type": "Identifier",
                          "name": "x1"
                        },
                        {
                          "type": "Identifier",
                          "name": "y1"
                        },
                        {
                          "type": "Identifier",
                          "name": "x2"
                        },
                        {
                          "type": "Identifier",
                          "name": "y2"
                        },
                        {
                          "type": "Identifier",
                          "name": "color"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "ConditionalExpression",
                              "test": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "==",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "x2"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "x1"
                                  }
                                },
                                "right": {
                                  "type": "BinaryExpression",
                                  "operator": "==",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "y2"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "y1"
                                  }
                                }
                              },
                              "consequent": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "setPixel"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "context"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "x1"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "y1"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "color"
                                  }
                                ]
                              },
                              "alternate": {
                                "type": "SequenceExpression",
                                "expressions": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "context"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "beginPath"
                                      }
                                    },
                                    "arguments": []
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "context"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "moveTo"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "x1"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 0.5,
                                          "raw": ".5"
                                        }
                                      },
                                      {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "y1"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 0.5,
                                          "raw": ".5"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "context"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "lineTo"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "x2"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 0.5,
                                          "raw": ".5"
                                        }
                                      },
                                      {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "y2"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 0.5,
                                          "raw": ".5"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "context"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "strokeStyle"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "color"
                                    }
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "context"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "stroke"
                                      }
                                    },
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fill_rect"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "fillRect"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "stroke_rect"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "context"
                        },
                        {
                          "type": "Identifier",
                          "name": "x1"
                        },
                        {
                          "type": "Identifier",
                          "name": "y1"
                        },
                        {
                          "type": "Identifier",
                          "name": "x2"
                        },
                        {
                          "type": "Identifier",
                          "name": "y2"
                        },
                        {
                          "type": "Identifier",
                          "name": "color"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "context"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "strokeStyle"
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "color"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "context"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "strokeRect"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "x1"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "y1"
                                },
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "-",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "x2"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "x1"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 1,
                                    "raw": "1"
                                  }
                                },
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "-",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "y2"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "y1"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 1,
                                    "raw": "1"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "draw_string"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "context"
                        },
                        {
                          "type": "Identifier",
                          "name": "text"
                        },
                        {
                          "type": "Identifier",
                          "name": "x"
                        },
                        {
                          "type": "Identifier",
                          "name": "y"
                        },
                        {
                          "type": "Identifier",
                          "name": "font"
                        },
                        {
                          "type": "Identifier",
                          "name": "color"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "context"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "textBaseline"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": "middle",
                                "raw": "\"middle\""
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "context"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "textAlign"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": "center",
                                "raw": "\"center\""
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "context"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "font"
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "font"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "context"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "fillStyle"
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "color"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "context"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "fillText"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "text"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "x"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "y"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "draw_image"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "context"
                        },
                        {
                          "type": "Identifier",
                          "name": "image"
                        },
                        {
                          "type": "Identifier",
                          "name": "x"
                        },
                        {
                          "type": "Identifier",
                          "name": "y"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "context"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "drawImage"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "image"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "x"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "y"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "global"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "save_canvas"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "canvas"
                        },
                        {
                          "type": "Identifier",
                          "name": "filename"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "canvas"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "canvas"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "toDataURL"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "image/png",
                                        "raw": "\"image/png\""
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "replace"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "image/png",
                                    "raw": "\"image/png\""
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "image/octet-stream",
                                    "raw": "\"image/octet-stream\""
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "link"
                                },
                                "init": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "document"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "createElement"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "a",
                                      "raw": "\"a\""
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "let"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "ConditionalExpression",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "==",
                                "left": {
                                  "type": "Literal",
                                  "value": "string",
                                  "raw": "\"string\""
                                },
                                "right": {
                                  "type": "UnaryExpression",
                                  "operator": "typeof",
                                  "argument": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "link"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "download"
                                    }
                                  },
                                  "prefix": true
                                }
                              },
                              "consequent": {
                                "type": "SequenceExpression",
                                "expressions": [
                                  {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "link"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "href"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "canvas"
                                    }
                                  },
                                  {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "link"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "download"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "filename"
                                    }
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "link"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "click"
                                      }
                                    },
                                    "arguments": []
                                  }
                                ]
                              },
                              "alternate": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "window"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "location"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "assign"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "canvas"
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  }
                }
              ]
            },
            "generator": false,
            "expression": false,
            "async": false
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}