json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[5].test.right.left.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[5].test.right.operator = "-";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[5].test.right.right = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[5].test.right.right.raw = "3";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[5].test.right.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[5].test.right.right.value = 3;
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[5].test.right.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[5].test.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.body[5].type = "IfStatement";
json.body[1].expression.arguments[1].body.body[12].body.body[1].alternate.type = "BlockStatement";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments = [];
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].async = false;
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body = [];
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.left = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.left.name = "subCriteria";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.operator = "=";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.right = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.right.arguments = [];
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.right.arguments[0] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.right.arguments[0].name = "dungeonLayout";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.right.arguments[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.right.arguments[1] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.right.arguments[1].name = "subCriteria";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.right.arguments[1].type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.right.callee = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.right.callee.name = "calculatePotentialDoorConnections";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.right.callee.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.right.type = "CallExpression";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].expression.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[0].type = "ExpressionStatement";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[1] = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[1].expression = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[1].expression.left = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[1].expression.left.computed = false;
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[1].expression.left.object = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[1].expression.left.object.name = "subCriteria";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[1].expression.left.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[1].expression.left.property = {};
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[1].expression.left.property.name = "length";
json.body[1].expression.arguments[1].body.body[12].body.body[1].consequent.expression.arguments[0].body.body[1].expression.left.property.type = "Identifier";
