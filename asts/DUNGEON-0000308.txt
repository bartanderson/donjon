json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].declarations[1].init.left.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].declarations[1].init.operator = "-";
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].declarations[1].init.right = {};
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].declarations[1].init.right.name = "d";
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].declarations[1].init.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].declarations[1].init.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].declarations[1].type = "VariableDeclarator";
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].declarations[2] = {};
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].declarations[2].id = {};
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].declarations[2].id.name = "c";
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].declarations[2].id.type = "Identifier";
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].declarations[2].init = null;
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].declarations[2].type = "VariableDeclarator";
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].kind = "let";
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[0].type = "VariableDeclaration";
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1] = {};
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body = {};
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.alternate = null;
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.consequent = {};
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.consequent.expression = {};
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.consequent.expression.left = {};
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.consequent.expression.left.computed = true;
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.consequent.expression.left.object = {};
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.consequent.expression.left.object.computed = true;
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.consequent.expression.left.object.object = {};
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.consequent.expression.left.object.object.computed = false;
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.consequent.expression.left.object.object.object = {};
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.consequent.expression.left.object.object.object.name = "a";
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.consequent.expression.left.object.object.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.consequent.expression.left.object.object.property = {};
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.consequent.expression.left.object.object.property.name = "cell";
json.body[1].expression.arguments[1].body.body[7].body.body[1].body.body[1].body.consequent.expression.left.object.object.property.type = "Identifier";
