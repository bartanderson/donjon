json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.left.right.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.left.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.operator = "&&";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right.left = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right.left.name = "a";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right.operator = "=";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right.right = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right.right.arguments = [];
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right.right.arguments[0] = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right.right.arguments[0].name = "a";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right.right.arguments[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right.right.callee = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right.right.callee.name = "Aa";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right.right.callee.type = "Identifier";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right.right.type = "CallExpression";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.right.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.alternate.type = "LogicalExpression";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent.left = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent.left.name = "a";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent.operator = "=";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent.right = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent.right.arguments = [];
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent.right.arguments[0] = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent.right.arguments[0].name = "a";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent.right.arguments[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent.right.callee = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent.right.callee.name = "za";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent.right.callee.type = "Identifier";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent.right.type = "CallExpression";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.consequent.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.test = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.test.left = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.test.left.raw = "\"hexagon\"";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.test.left.type = "Literal";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.test.left.value = "hexagon";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.test.operator = "==";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.test.right = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.test.right.computed = false;
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.test.right.object = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.test.right.object.name = "a";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.test.right.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.test.right.property = {};
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.test.right.property.name = "dungeon_layout";
json.body[1].expression.arguments[1].body.body[3].body.body[16].expression.alternate.alternate.test.right.property.type = "Identifier";
