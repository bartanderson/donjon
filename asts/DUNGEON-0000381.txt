json.body[1].expression.arguments[1].body.body[10].body.body[21].consequent.expression.expressions[1].left.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[21].consequent.expression.expressions[1].operator = "=";
json.body[1].expression.arguments[1].body.body[10].body.body[21].consequent.expression.expressions[1].right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[21].consequent.expression.expressions[1].right.name = "k";
json.body[1].expression.arguments[1].body.body[10].body.body[21].consequent.expression.expressions[1].right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[21].consequent.expression.expressions[1].type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[21].consequent.expression.type = "SequenceExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[21].consequent.type = "ExpressionStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[21].test = {};
json.body[1].expression.arguments[1].body.body[10].body.body[21].test.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[21].test.left.raw = "0";
json.body[1].expression.arguments[1].body.body[10].body.body[21].test.left.type = "Literal";
json.body[1].expression.arguments[1].body.body[10].body.body[21].test.left.value = 0;
json.body[1].expression.arguments[1].body.body[10].body.body[21].test.operator = "==";
json.body[1].expression.arguments[1].body.body[10].body.body[21].test.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[21].test.right.name = "e";
json.body[1].expression.arguments[1].body.body[10].body.body[21].test.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[21].test.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[21].type = "IfStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[22] = {};
json.body[1].expression.arguments[1].body.body[10].body.body[22].body = {};
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body = {};
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression = {};
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions = [];
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0] = {};
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0].alternate = {};
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0].alternate.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0].alternate.left.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0].alternate.left.left.computed = true;
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0].alternate.left.left.object = {};
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0].alternate.left.left.object.computed = true;
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0].alternate.left.left.object.object = {};
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0].alternate.left.left.object.object.computed = false;
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0].alternate.left.left.object.object.object = {};
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0].alternate.left.left.object.object.object.name = "a";
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0].alternate.left.left.object.object.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0].alternate.left.left.object.object.property = {};
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0].alternate.left.left.object.object.property.name = "cell";
json.body[1].expression.arguments[1].body.body[10].body.body[22].body.body.expression.expressions[0].alternate.left.left.object.object.property.type = "Identifier";
