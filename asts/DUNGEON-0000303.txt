json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].body.expression.expressions[3].left.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].body.expression.expressions[3].operator = "=";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].body.expression.expressions[3].right = {};
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].body.expression.expressions[3].right.raw = "1";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].body.expression.expressions[3].right.type = "Literal";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].body.expression.expressions[3].right.value = 1;
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].body.expression.expressions[3].type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].body.expression.type = "SequenceExpression";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].body.type = "ExpressionStatement";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].init = null;
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].test = {};
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].test.left = {};
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].test.left.name = "d";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].test.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].test.operator = "<=";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].test.right = {};
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].test.right.name = "g";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].test.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].test.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].type = "ForStatement";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].update = {};
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].update.argument = {};
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].update.argument.name = "d";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].update.argument.type = "Identifier";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].update.operator = "++";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].update.prefix = false;
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.body[2].update.type = "UpdateExpression";
json.body[1].expression.arguments[1].body.body[6].body.body[1].body.type = "BlockStatement";
json.body[1].expression.arguments[1].body.body[6].body.body[1].init = {};
json.body[1].expression.arguments[1].body.body[6].body.body[1].init.left = {};
json.body[1].expression.arguments[1].body.body[6].body.body[1].init.left.name = "f";
json.body[1].expression.arguments[1].body.body[6].body.body[1].init.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[6].body.body[1].init.operator = "=";
json.body[1].expression.arguments[1].body.body[6].body.body[1].init.right = {};
json.body[1].expression.arguments[1].body.body[6].body.body[1].init.right.raw = "0";
json.body[1].expression.arguments[1].body.body[6].body.body[1].init.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[6].body.body[1].init.right.value = 0;
json.body[1].expression.arguments[1].body.body[6].body.body[1].init.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[6].body.body[1].test = {};
json.body[1].expression.arguments[1].body.body[6].body.body[1].test.left = {};
json.body[1].expression.arguments[1].body.body[6].body.body[1].test.left.name = "f";
json.body[1].expression.arguments[1].body.body[6].body.body[1].test.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[6].body.body[1].test.operator = "<";
json.body[1].expression.arguments[1].body.body[6].body.body[1].test.right = {};
json.body[1].expression.arguments[1].body.body[6].body.body[1].test.right.name = "b";
json.body[1].expression.arguments[1].body.body[6].body.body[1].test.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[6].body.body[1].test.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[6].body.body[1].type = "ForStatement";
json.body[1].expression.arguments[1].body.body[6].body.body[1].update = {};
json.body[1].expression.arguments[1].body.body[6].body.body[1].update.argument = {};
json.body[1].expression.arguments[1].body.body[6].body.body[1].update.argument.name = "f";
json.body[1].expression.arguments[1].body.body[6].body.body[1].update.argument.type = "Identifier";
json.body[1].expression.arguments[1].body.body[6].body.body[1].update.operator = "++";
json.body[1].expression.arguments[1].body.body[6].body.body[1].update.prefix = false;
json.body[1].expression.arguments[1].body.body[6].body.body[1].update.type = "UpdateExpression";
json.body[1].expression.arguments[1].body.body[6].body.body[2] = {};
json.body[1].expression.arguments[1].body.body[6].body.body[2].argument = {};
json.body[1].expression.arguments[1].body.body[6].body.body[2].argument.name = "a";
json.body[1].expression.arguments[1].body.body[6].body.body[2].argument.type = "Identifier";
json.body[1].expression.arguments[1].body.body[6].body.body[2].type = "ReturnStatement";
json.body[1].expression.arguments[1].body.body[6].body.type = "BlockStatement";
json.body[1].expression.arguments[1].body.body[6].expression = false;
json.body[1].expression.arguments[1].body.body[6].generator = false;
json.body[1].expression.arguments[1].body.body[6].id = {};
json.body[1].expression.arguments[1].body.body[6].id.name = "ya";
json.body[1].expression.arguments[1].body.body[6].id.type = "Identifier";
json.body[1].expression.arguments[1].body.body[6].params = [];
json.body[1].expression.arguments[1].body.body[6].params[0] = {};
json.body[1].expression.arguments[1].body.body[6].params[0].name = "a";
json.body[1].expression.arguments[1].body.body[6].params[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[6].type = "FunctionDeclaration";
json.body[1].expression.arguments[1].body.body[7] = {};
json.body[1].expression.arguments[1].body.body[7].async = false;
json.body[1].expression.arguments[1].body.body[7].body = {};
json.body[1].expression.arguments[1].body.body[7].body.body = [];
json.body[1].expression.arguments[1].body.body[7].body.body[0] = {};
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations = [];
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0] = {};
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0].id = {};
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0].id.name = "b";
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0].id.type = "Identifier";
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0].init = {};
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0].init.arguments = [];
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0].init.arguments[0] = {};
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0].init.arguments[0].left = {};
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0].init.arguments[0].left.computed = false;
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0].init.arguments[0].left.object = {};
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0].init.arguments[0].left.object.name = "a";
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0].init.arguments[0].left.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0].init.arguments[0].left.property = {};
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0].init.arguments[0].left.property.name = "n_rows";
json.body[1].expression.arguments[1].body.body[7].body.body[0].declarations[0].init.arguments[0].left.property.type = "Identifier";
