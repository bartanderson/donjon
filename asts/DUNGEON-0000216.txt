json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].left.left.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].left.operator = "&";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].left.right = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].left.right.raw = "6";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].left.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].left.right.value = 6;
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].left.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].operator = "||";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments = [];
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[0] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[0].name = "applyWallShading";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[0].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[1] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[1].name = "D";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[1].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[2] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[2].name = "E";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[2].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[3] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[3].name = "G";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[3].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[4] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[4].name = "E";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[4].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[5] = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[5].name = "p";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.arguments[5].type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.callee = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.callee.name = "draw_line";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.callee.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].right.type = "CallExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.expressions[3].type = "LogicalExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.expression.type = "SequenceExpression";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].consequent.type = "ExpressionStatement";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].test = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].test.left = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].test.left.name = "p";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].test.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].test.operator = "=";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].test.right = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].test.right.computed = false;
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].test.right.object = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].test.right.object.name = "w";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].test.right.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].test.right.property = {};
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].test.right.property.name = "wall";
json.body[1].expression.arguments[1].body.body[2].body.body[1].body[7].body[6].body.body[1].body.body[3].test.right.property.type = "Identifier";
