json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[1].callee.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[1].type = "CallExpression";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2] = {};
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].left = {};
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].left.name = "dungeonConfig";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].operator = "=";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right = {};
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.left = {};
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.left.left = {};
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.left.left.name = "dungeonConfig";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.left.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.left.operator = "+";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.left.right = {};
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.left.right.raw = "1";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.left.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.left.right.value = 1;
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.left.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.operator = "*";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.right = {};
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.right.computed = false;
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.right.object = {};
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.right.object.name = "adjacentRoomId";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.right.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.right.property = {};
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.right.property.name = "cell";
json.body[1].expression.arguments[1].body.body[30].body.body[1].consequent.init.expressions[2].right.right.property.type = "Identifier";
