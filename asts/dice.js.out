{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "Literal",
        "value": "use strict",
        "raw": "'use strict'"
      },
      "directive": "use strict"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "ArrowFunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "k"
            },
            {
              "type": "Identifier",
              "name": "l"
            }
          ],
          "body": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "l"
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "k"
              }
            ]
          },
          "generator": false,
          "expression": true,
          "async": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "window"
          },
          {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "k"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "l"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "a"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "c"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "q"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "a"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "let"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "c"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "c"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "console"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "log"
                            }
                          },
                          "arguments": [
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "JSON"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "stringify"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "c"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "c"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "string"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "replace"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": {},
                              "raw": "/\\{(\\w+)\\}/g",
                              "regex": {
                                "pattern": "\\{(\\w+)\\}",
                                "flags": "g"
                              }
                            },
                            {
                              "type": "ArrowFunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "b"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "d"
                                }
                              ],
                              "body": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "c"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "d"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "value"
                                }
                              },
                              "generator": false,
                              "expression": true,
                              "async": false
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "generator": false,
                  "expression": false,
                  "async": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "q"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "a"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "c"
                            },
                            "init": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "string"
                                  },
                                  "computed": false,
                                  "value": {
                                    "type": "Identifier",
                                    "name": "a"
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "shorthand": false
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "let"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ArrayExpression",
                              "elements": [
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "regex"
                                      },
                                      "computed": false,
                                      "value": {
                                        "type": "Literal",
                                        "value": {},
                                        "raw": "/(\\d*)d(\\d+)/",
                                        "regex": {
                                          "pattern": "(\\d*)d(\\d+)",
                                          "flags": ""
                                        }
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "shorthand": false
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "fn"
                                      },
                                      "computed": false,
                                      "value": {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "b"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "d"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "h"
                                          }
                                        ],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "b"
                                                },
                                                "right": {
                                                  "type": "LogicalExpression",
                                                  "operator": "||",
                                                  "left": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "parseInt"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "d"
                                                      },
                                                      {
                                                        "type": "Literal",
                                                        "value": 10,
                                                        "raw": "10"
                                                      }
                                                    ]
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "1"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "d"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "parseInt"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "h"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 10,
                                                      "raw": "10"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "f"
                                                  },
                                                  "init": {
                                                    "type": "LogicalExpression",
                                                    "operator": "&&",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "==",
                                                      "left": {
                                                        "type": "Literal",
                                                        "value": 1,
                                                        "raw": "1"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "b"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "BinaryExpression",
                                                      "operator": "==",
                                                      "left": {
                                                        "type": "Literal",
                                                        "value": 20,
                                                        "raw": "20"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "d"
                                                      }
                                                    }
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "h"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "m"
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "e"
                                                  },
                                                  "init": {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "n"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                          "type": "Identifier",
                                                          "name": "b"
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                      },
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "d"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                          "type": "Identifier",
                                                          "name": "d"
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": true
                                                      },
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "d20"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                          "type": "Identifier",
                                                          "name": "f"
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                      },
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "vx"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                          "type": "ArrayExpression",
                                                          "elements": []
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                      },
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "sx"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                          "type": "ArrayExpression",
                                                          "elements": []
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                      },
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "value"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                          "type": "Literal",
                                                          "value": 0,
                                                          "raw": "0"
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                      },
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "roll_die"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                          "type": "ArrowFunctionExpression",
                                                          "id": null,
                                                          "params": [],
                                                          "body": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "Math"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "floor"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "*",
                                                                  "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Math"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "random"
                                                                      }
                                                                    },
                                                                    "arguments": []
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "e"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "d"
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 1,
                                                              "raw": "1"
                                                            }
                                                          },
                                                          "generator": false,
                                                          "expression": true,
                                                          "async": false
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                      },
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "fmt_die"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                          "type": "ArrowFunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "g"
                                                            }
                                                          ],
                                                          "body": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "e"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "d20"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "==",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": 1,
                                                                  "raw": "1"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "g"
                                                                }
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "TemplateLiteral",
                                                              "quasis": [
                                                                {
                                                                  "type": "TemplateElement",
                                                                  "value": {
                                                                    "raw": "<b class=\"miss\">",
                                                                    "cooked": "<b class=\"miss\">"
                                                                  },
                                                                  "tail": false
                                                                },
                                                                {
                                                                  "type": "TemplateElement",
                                                                  "value": {
                                                                    "raw": "</b>",
                                                                    "cooked": "</b>"
                                                                  },
                                                                  "tail": true
                                                                }
                                                              ],
                                                              "expressions": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "g"
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "ConditionalExpression",
                                                              "test": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "e"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "d20"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "==",
                                                                  "left": {
                                                                    "type": "Literal",
                                                                    "value": 20,
                                                                    "raw": "20"
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "g"
                                                                  }
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "TemplateLiteral",
                                                                "quasis": [
                                                                  {
                                                                    "type": "TemplateElement",
                                                                    "value": {
                                                                      "raw": "<b class=\"crit\">",
                                                                      "cooked": "<b class=\"crit\">"
                                                                    },
                                                                    "tail": false
                                                                  },
                                                                  {
                                                                    "type": "TemplateElement",
                                                                    "value": {
                                                                      "raw": "</b>",
                                                                      "cooked": "</b>"
                                                                    },
                                                                    "tail": true
                                                                  }
                                                                ],
                                                                "expressions": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "g"
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": {
                                                                "type": "ConditionalExpression",
                                                                "test": {
                                                                  "type": "LogicalExpression",
                                                                  "operator": "||",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "==",
                                                                    "left": {
                                                                      "type": "Literal",
                                                                      "value": 1,
                                                                      "raw": "1"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "g"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "==",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "g"
                                                                    },
                                                                    "right": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "d"
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "consequent": {
                                                                  "type": "TemplateLiteral",
                                                                  "quasis": [
                                                                    {
                                                                      "type": "TemplateElement",
                                                                      "value": {
                                                                        "raw": "<b>",
                                                                        "cooked": "<b>"
                                                                      },
                                                                      "tail": false
                                                                    },
                                                                    {
                                                                      "type": "TemplateElement",
                                                                      "value": {
                                                                        "raw": "</b>",
                                                                        "cooked": "</b>"
                                                                      },
                                                                      "tail": true
                                                                    }
                                                                  ],
                                                                  "expressions": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "g"
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": {
                                                                  "type": "Identifier",
                                                                  "name": "g"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "generator": false,
                                                          "expression": true,
                                                          "async": false
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                      },
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "sum"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                          "type": "ArrowFunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "g"
                                                            }
                                                          ],
                                                          "body": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "g"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "reduce"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "ArrowFunctionExpression",
                                                                "id": null,
                                                                "params": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "n"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "r"
                                                                  }
                                                                ],
                                                                "body": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "n"
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "r"
                                                                  }
                                                                },
                                                                "generator": false,
                                                                "expression": true,
                                                                "async": false
                                                              }
                                                            ]
                                                          },
                                                          "generator": false,
                                                          "expression": true,
                                                          "async": false
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                      },
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "fmt_pool"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                          "type": "ArrowFunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "g"
                                                            }
                                                          ],
                                                          "body": {
                                                            "type": "TemplateLiteral",
                                                            "quasis": [
                                                              {
                                                                "type": "TemplateElement",
                                                                "value": {
                                                                  "raw": "",
                                                                  "cooked": ""
                                                                },
                                                                "tail": false
                                                              },
                                                              {
                                                                "type": "TemplateElement",
                                                                "value": {
                                                                  "raw": "d",
                                                                  "cooked": "d"
                                                                },
                                                                "tail": false
                                                              },
                                                              {
                                                                "type": "TemplateElement",
                                                                "value": {
                                                                  "raw": " (",
                                                                  "cooked": " ("
                                                                },
                                                                "tail": false
                                                              },
                                                              {
                                                                "type": "TemplateElement",
                                                                "value": {
                                                                  "raw": ")",
                                                                  "cooked": ")"
                                                                },
                                                                "tail": true
                                                              }
                                                            ],
                                                            "expressions": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "e"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "n"
                                                                }
                                                              },
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "e"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "d"
                                                                }
                                                              },
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "g"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "join"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": ", ",
                                                                    "raw": "\", \""
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          },
                                                          "generator": false,
                                                          "expression": true,
                                                          "async": false
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                      }
                                                    ]
                                                  }
                                                }
                                              ],
                                              "kind": "let"
                                            },
                                            {
                                              "type": "ForStatement",
                                              "init": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "d"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0,
                                                  "raw": "0"
                                                }
                                              },
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "d"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "b"
                                                }
                                              },
                                              "update": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "d"
                                                },
                                                "prefix": false
                                              },
                                              "body": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "SequenceExpression",
                                                  "expressions": [
                                                    {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "f"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "e"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "roll_die"
                                                          }
                                                        },
                                                        "arguments": []
                                                      }
                                                    },
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "e"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "sx"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "e"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "fmt_die"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "f"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "e"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "vx"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "f"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "e"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "e"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "sum"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "e"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "vx"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "e"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "str"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "e"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "fmt_pool"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "e"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "sx"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "c"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "h"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "e"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "TemplateLiteral",
                                                "quasis": [
                                                  {
                                                    "type": "TemplateElement",
                                                    "value": {
                                                      "raw": "{",
                                                      "cooked": "{"
                                                    },
                                                    "tail": false
                                                  },
                                                  {
                                                    "type": "TemplateElement",
                                                    "value": {
                                                      "raw": "}",
                                                      "cooked": "}"
                                                    },
                                                    "tail": true
                                                  }
                                                ],
                                                "expressions": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "h"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "shorthand": false
                                    }
                                  ]
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "regex"
                                      },
                                      "computed": false,
                                      "value": {
                                        "type": "Literal",
                                        "value": {},
                                        "raw": "/(\\d+\\.\\d+|\\d+)/",
                                        "regex": {
                                          "pattern": "(\\d+\\.\\d+|\\d+)",
                                          "flags": ""
                                        }
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "shorthand": false
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "fn"
                                      },
                                      "computed": false,
                                      "value": {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "b"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "d"
                                          }
                                        ],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "b"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "parseFloat"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "d"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "d"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "m"
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "c"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "d"
                                                  }
                                                },
                                                "right": {
                                                  "type": "ObjectExpression",
                                                  "properties": [
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                      },
                                                      "computed": false,
                                                      "value": {
                                                        "type": "Identifier",
                                                        "name": "b"
                                                      },
                                                      "kind": "init",
                                                      "method": false,
                                                      "shorthand": false
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "str"
                                                      },
                                                      "computed": false,
                                                      "value": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "b"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "toString"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": 10,
                                                            "raw": "10"
                                                          }
                                                        ]
                                                      },
                                                      "kind": "init",
                                                      "method": false,
                                                      "shorthand": false
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "TemplateLiteral",
                                                "quasis": [
                                                  {
                                                    "type": "TemplateElement",
                                                    "value": {
                                                      "raw": "{",
                                                      "cooked": "{"
                                                    },
                                                    "tail": false
                                                  },
                                                  {
                                                    "type": "TemplateElement",
                                                    "value": {
                                                      "raw": "}",
                                                      "cooked": "}"
                                                    },
                                                    "tail": true
                                                  }
                                                ],
                                                "expressions": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "d"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "shorthand": false
                                    }
                                  ]
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "forEach"
                            }
                          },
                          "arguments": [
                            {
                              "type": "ArrowFunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "b"
                                }
                              ],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ForStatement",
                                    "init": null,
                                    "test": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "b"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "test"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "c"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    },
                                    "update": null,
                                    "body": {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "c"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "string"
                                          }
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "c"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "string"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "replace"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "b"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "regex"
                                              }
                                            },
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "b"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "fn"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "generator": false,
                              "expression": false,
                              "async": false
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Identifier",
                          "name": "c"
                        }
                      }
                    ]
                  },
                  "generator": false,
                  "expression": false,
                  "async": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "p"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "a"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ArrayExpression",
                              "elements": [
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "regex"
                                      },
                                      "computed": false,
                                      "value": {
                                        "type": "Literal",
                                        "value": {},
                                        "raw": "/([a-z]*)\\(([^()]+)\\)/",
                                        "regex": {
                                          "pattern": "([a-z]*)\\(([^()]+)\\)",
                                          "flags": ""
                                        }
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "shorthand": false
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "fn"
                                      },
                                      "computed": false,
                                      "value": {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "c"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "b"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "d"
                                          }
                                        ],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "a"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "string"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "d"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "a"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "a"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "h"
                                                  },
                                                  "init": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "m"
                                                    },
                                                    "arguments": []
                                                  }
                                                }
                                              ],
                                              "kind": "let"
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "a"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "string"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "a"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "string"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "replace"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": {},
                                                      "raw": "/\\{(\\w+)\\}/",
                                                      "regex": {
                                                        "pattern": "\\{(\\w+)\\}",
                                                        "flags": ""
                                                      }
                                                    },
                                                    {
                                                      "type": "ArrowFunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "f"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "e"
                                                        }
                                                      ],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "f"
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "a"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "e"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "e"
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "f"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "g"
                                                                },
                                                                "init": {
                                                                  "type": "TemplateLiteral",
                                                                  "quasis": [
                                                                    {
                                                                      "type": "TemplateElement",
                                                                      "value": {
                                                                        "raw": "",
                                                                        "cooked": ""
                                                                      },
                                                                      "tail": false
                                                                    },
                                                                    {
                                                                      "type": "TemplateElement",
                                                                      "value": {
                                                                        "raw": "(",
                                                                        "cooked": "("
                                                                      },
                                                                      "tail": false
                                                                    },
                                                                    {
                                                                      "type": "TemplateElement",
                                                                      "value": {
                                                                        "raw": ")",
                                                                        "cooked": ")"
                                                                      },
                                                                      "tail": true
                                                                    }
                                                                  ],
                                                                  "expressions": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "b"
                                                                    },
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "f"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "str"
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ],
                                                            "kind": "var"
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "==",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": "avg",
                                                                "raw": "\"avg\""
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "b"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                  "type": "LogicalExpression",
                                                                  "operator": "&&",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "f"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "n"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "f"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "d"
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "e"
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "/",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "*",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "f"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "n"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "f"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "d"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": 1,
                                                                          "raw": "1"
                                                                        }
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": 2,
                                                                      "raw": "2"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "alternate": {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "==",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": "int",
                                                                  "raw": "\"int\""
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "b"
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "e"
                                                                  },
                                                                  "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Math"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "floor"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              },
                                                              "alternate": {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "==",
                                                                  "left": {
                                                                    "type": "Literal",
                                                                    "value": "round",
                                                                    "raw": "\"round\""
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "b"
                                                                  }
                                                                },
                                                                "consequent": {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "e"
                                                                    },
                                                                    "right": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "Math"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "floor"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "e"
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": 0.5,
                                                                            "raw": ".5"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                },
                                                                "alternate": {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "==",
                                                                    "left": {
                                                                      "type": "Literal",
                                                                      "value": "sqrt",
                                                                      "raw": "\"sqrt\""
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "b"
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                      },
                                                                      "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Math"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "sqrt"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "e"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  },
                                                                  "alternate": {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "LogicalExpression",
                                                                      "operator": "&&",
                                                                      "left": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "||",
                                                                        "left": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "==",
                                                                          "left": {
                                                                            "type": "Literal",
                                                                            "value": "adv",
                                                                            "raw": "\"adv\""
                                                                          },
                                                                          "right": {
                                                                            "type": "Identifier",
                                                                            "name": "b"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "==",
                                                                          "left": {
                                                                            "type": "Literal",
                                                                            "value": "dis",
                                                                            "raw": "\"dis\""
                                                                          },
                                                                          "right": {
                                                                            "type": "Identifier",
                                                                            "name": "b"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "f"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "d20"
                                                                        }
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "g"
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "f"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "roll_die"
                                                                                }
                                                                              },
                                                                              "arguments": []
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "VariableDeclaration",
                                                                          "declarations": [
                                                                            {
                                                                              "type": "VariableDeclarator",
                                                                              "id": {
                                                                                "type": "Identifier",
                                                                                "name": "n"
                                                                              },
                                                                              "init": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "f"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "fmt_die"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "g"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ],
                                                                          "kind": "let"
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "ConditionalExpression",
                                                                            "test": {
                                                                              "type": "LogicalExpression",
                                                                              "operator": "||",
                                                                              "left": {
                                                                                "type": "LogicalExpression",
                                                                                "operator": "&&",
                                                                                "left": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "==",
                                                                                  "left": {
                                                                                    "type": "Literal",
                                                                                    "value": "adv",
                                                                                    "raw": "\"adv\""
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "b"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": ">",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "g"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "f"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "vx"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": 0,
                                                                                      "raw": "0"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "LogicalExpression",
                                                                                "operator": "&&",
                                                                                "left": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "==",
                                                                                  "left": {
                                                                                    "type": "Literal",
                                                                                    "value": "dis",
                                                                                    "raw": "\"dis\""
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "b"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "<",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "g"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "f"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "vx"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": 0,
                                                                                      "raw": "0"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            "consequent": {
                                                                              "type": "SequenceExpression",
                                                                              "expressions": [
                                                                                {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "e"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "g"
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "g"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "f"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "fmt_pool"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": [
                                                                                          {
                                                                                            "type": "TemplateLiteral",
                                                                                            "quasis": [
                                                                                              {
                                                                                                "type": "TemplateElement",
                                                                                                "value": {
                                                                                                  "raw": "<s>",
                                                                                                  "cooked": "<s>"
                                                                                                },
                                                                                                "tail": false
                                                                                              },
                                                                                              {
                                                                                                "type": "TemplateElement",
                                                                                                "value": {
                                                                                                  "raw": "</s>",
                                                                                                  "cooked": "</s>"
                                                                                                },
                                                                                                "tail": true
                                                                                              }
                                                                                            ],
                                                                                            "expressions": [
                                                                                              {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "f"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "sx"
                                                                                                  }
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Literal",
                                                                                                  "value": 0,
                                                                                                  "raw": "0"
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "n"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "alternate": {
                                                                              "type": "AssignmentExpression",
                                                                              "operator": "=",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "g"
                                                                              },
                                                                              "right": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "f"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "fmt_pool"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": [
                                                                                      {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "f"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "sx"
                                                                                          }
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Literal",
                                                                                          "value": 0,
                                                                                          "raw": "0"
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "TemplateLiteral",
                                                                                        "quasis": [
                                                                                          {
                                                                                            "type": "TemplateElement",
                                                                                            "value": {
                                                                                              "raw": "<s>",
                                                                                              "cooked": "<s>"
                                                                                            },
                                                                                            "tail": false
                                                                                          },
                                                                                          {
                                                                                            "type": "TemplateElement",
                                                                                            "value": {
                                                                                              "raw": "</s>",
                                                                                              "cooked": "</s>"
                                                                                            },
                                                                                            "tail": true
                                                                                          }
                                                                                        ],
                                                                                        "expressions": [
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "n"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "g"
                                                                            },
                                                                            "right": {
                                                                              "type": "TemplateLiteral",
                                                                              "quasis": [
                                                                                {
                                                                                  "type": "TemplateElement",
                                                                                  "value": {
                                                                                    "raw": "",
                                                                                    "cooked": ""
                                                                                  },
                                                                                  "tail": false
                                                                                },
                                                                                {
                                                                                  "type": "TemplateElement",
                                                                                  "value": {
                                                                                    "raw": "(",
                                                                                    "cooked": "("
                                                                                  },
                                                                                  "tail": false
                                                                                },
                                                                                {
                                                                                  "type": "TemplateElement",
                                                                                  "value": {
                                                                                    "raw": ")",
                                                                                    "cooked": ")"
                                                                                  },
                                                                                  "tail": true
                                                                                }
                                                                              ],
                                                                              "expressions": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "b"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "g"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": null
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "a"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "h"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "value"
                                                                    },
                                                                    "computed": false,
                                                                    "value": {
                                                                      "type": "Identifier",
                                                                      "name": "e"
                                                                    },
                                                                    "kind": "init",
                                                                    "method": false,
                                                                    "shorthand": false
                                                                  },
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "str"
                                                                    },
                                                                    "computed": false,
                                                                    "value": {
                                                                      "type": "Identifier",
                                                                      "name": "g"
                                                                    },
                                                                    "kind": "init",
                                                                    "method": false,
                                                                    "shorthand": false
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "generator": false,
                                                      "expression": false,
                                                      "async": false
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "TemplateLiteral",
                                                "quasis": [
                                                  {
                                                    "type": "TemplateElement",
                                                    "value": {
                                                      "raw": "{",
                                                      "cooked": "{"
                                                    },
                                                    "tail": false
                                                  },
                                                  {
                                                    "type": "TemplateElement",
                                                    "value": {
                                                      "raw": "}",
                                                      "cooked": "}"
                                                    },
                                                    "tail": true
                                                  }
                                                ],
                                                "expressions": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "h"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "shorthand": false
                                    }
                                  ]
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "regex"
                                      },
                                      "computed": false,
                                      "value": {
                                        "type": "Literal",
                                        "value": {},
                                        "raw": "/\\{(\\w+)\\}\\s*(\\*|\\/|%)\\s*\\{(\\w+)\\}/",
                                        "regex": {
                                          "pattern": "\\{(\\w+)\\}\\s*(\\*|\\/|%)\\s*\\{(\\w+)\\}",
                                          "flags": ""
                                        }
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "shorthand": false
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "fn"
                                      },
                                      "computed": false,
                                      "value": {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "c"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "b"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "d"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "h"
                                          }
                                        ],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "c"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "m"
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "f"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "e"
                                                  },
                                                  "init": {
                                                    "type": "TemplateLiteral",
                                                    "quasis": [
                                                      {
                                                        "type": "TemplateElement",
                                                        "value": {
                                                          "raw": "",
                                                          "cooked": ""
                                                        },
                                                        "tail": false
                                                      },
                                                      {
                                                        "type": "TemplateElement",
                                                        "value": {
                                                          "raw": " ",
                                                          "cooked": " "
                                                        },
                                                        "tail": false
                                                      },
                                                      {
                                                        "type": "TemplateElement",
                                                        "value": {
                                                          "raw": " ",
                                                          "cooked": " "
                                                        },
                                                        "tail": false
                                                      },
                                                      {
                                                        "type": "TemplateElement",
                                                        "value": {
                                                          "raw": "",
                                                          "cooked": ""
                                                        },
                                                        "tail": true
                                                      }
                                                    ],
                                                    "expressions": [
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "b"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "str"
                                                        }
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "d"
                                                      },
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "h"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "str"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              ],
                                              "kind": "let"
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "==",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": "*",
                                                    "raw": "\"*\""
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "d"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "f"
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "a"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "b"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "a"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "h"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "alternate": {
                                                  "type": "ConditionalExpression",
                                                  "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "==",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "/",
                                                      "raw": "\"/\""
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "d"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "f"
                                                    },
                                                    "right": {
                                                      "type": "BinaryExpression",
                                                      "operator": "/",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "b"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "value"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "h"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "value"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "alternate": {
                                                    "type": "LogicalExpression",
                                                    "operator": "&&",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "==",
                                                      "left": {
                                                        "type": "Literal",
                                                        "value": "%",
                                                        "raw": "\"%\""
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "d"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "f"
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "%",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "a"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "b"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "value"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "a"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "h"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "value"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "a"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "c"
                                                  }
                                                },
                                                "right": {
                                                  "type": "ObjectExpression",
                                                  "properties": [
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                      },
                                                      "computed": false,
                                                      "value": {
                                                        "type": "Identifier",
                                                        "name": "f"
                                                      },
                                                      "kind": "init",
                                                      "method": false,
                                                      "shorthand": false
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "str"
                                                      },
                                                      "computed": false,
                                                      "value": {
                                                        "type": "Identifier",
                                                        "name": "e"
                                                      },
                                                      "kind": "init",
                                                      "method": false,
                                                      "shorthand": false
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "TemplateLiteral",
                                                "quasis": [
                                                  {
                                                    "type": "TemplateElement",
                                                    "value": {
                                                      "raw": "{",
                                                      "cooked": "{"
                                                    },
                                                    "tail": false
                                                  },
                                                  {
                                                    "type": "TemplateElement",
                                                    "value": {
                                                      "raw": "}",
                                                      "cooked": "}"
                                                    },
                                                    "tail": true
                                                  }
                                                ],
                                                "expressions": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "c"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "shorthand": false
                                    }
                                  ]
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "regex"
                                      },
                                      "computed": false,
                                      "value": {
                                        "type": "Literal",
                                        "value": {},
                                        "raw": "/\\{(\\w+)\\}\\s*(\\+|\\-)\\s*\\{(\\w+)\\}/",
                                        "regex": {
                                          "pattern": "\\{(\\w+)\\}\\s*(\\+|\\-)\\s*\\{(\\w+)\\}",
                                          "flags": ""
                                        }
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "shorthand": false
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "fn"
                                      },
                                      "computed": false,
                                      "value": {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "c"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "b"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "d"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "h"
                                          }
                                        ],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "c"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "m"
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "f"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "e"
                                                  },
                                                  "init": {
                                                    "type": "TemplateLiteral",
                                                    "quasis": [
                                                      {
                                                        "type": "TemplateElement",
                                                        "value": {
                                                          "raw": "",
                                                          "cooked": ""
                                                        },
                                                        "tail": false
                                                      },
                                                      {
                                                        "type": "TemplateElement",
                                                        "value": {
                                                          "raw": " ",
                                                          "cooked": " "
                                                        },
                                                        "tail": false
                                                      },
                                                      {
                                                        "type": "TemplateElement",
                                                        "value": {
                                                          "raw": " ",
                                                          "cooked": " "
                                                        },
                                                        "tail": false
                                                      },
                                                      {
                                                        "type": "TemplateElement",
                                                        "value": {
                                                          "raw": "",
                                                          "cooked": ""
                                                        },
                                                        "tail": true
                                                      }
                                                    ],
                                                    "expressions": [
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "b"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "str"
                                                        }
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "d"
                                                      },
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "h"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "str"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              ],
                                              "kind": "let"
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "==",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": "+",
                                                    "raw": "\"+\""
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "d"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "f"
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "a"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "b"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "a"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "h"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "alternate": {
                                                  "type": "LogicalExpression",
                                                  "operator": "&&",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "==",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "-",
                                                      "raw": "\"-\""
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "d"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "f"
                                                    },
                                                    "right": {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "b"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "value"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "h"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "value"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "a"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "c"
                                                  }
                                                },
                                                "right": {
                                                  "type": "ObjectExpression",
                                                  "properties": [
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                      },
                                                      "computed": false,
                                                      "value": {
                                                        "type": "Identifier",
                                                        "name": "f"
                                                      },
                                                      "kind": "init",
                                                      "method": false,
                                                      "shorthand": false
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "str"
                                                      },
                                                      "computed": false,
                                                      "value": {
                                                        "type": "Identifier",
                                                        "name": "e"
                                                      },
                                                      "kind": "init",
                                                      "method": false,
                                                      "shorthand": false
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "TemplateLiteral",
                                                "quasis": [
                                                  {
                                                    "type": "TemplateElement",
                                                    "value": {
                                                      "raw": "{",
                                                      "cooked": "{"
                                                    },
                                                    "tail": false
                                                  },
                                                  {
                                                    "type": "TemplateElement",
                                                    "value": {
                                                      "raw": "}",
                                                      "cooked": "}"
                                                    },
                                                    "tail": true
                                                  }
                                                ],
                                                "expressions": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "c"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "shorthand": false
                                    }
                                  ]
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "forEach"
                            }
                          },
                          "arguments": [
                            {
                              "type": "ArrowFunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "c"
                                }
                              ],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ForStatement",
                                    "init": null,
                                    "test": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "c"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "test"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "a"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    },
                                    "update": null,
                                    "body": {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "a"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "string"
                                          }
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "a"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "string"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "replace"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "c"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "regex"
                                              }
                                            },
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "c"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "fn"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "generator": false,
                              "expression": false,
                              "async": false
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Identifier",
                          "name": "a"
                        }
                      }
                    ]
                  },
                  "generator": false,
                  "expression": false,
                  "async": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "m"
                  },
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "a"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Math"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "floor"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "operator": "*",
                                  "left": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "random"
                                      }
                                    },
                                    "arguments": []
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Number"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "MAX_SAFE_INTEGER"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "c"
                            },
                            "init": {
                              "type": "ArrayExpression",
                              "elements": []
                            }
                          }
                        ],
                        "kind": "let"
                      },
                      {
                        "type": "ForStatement",
                        "init": null,
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "<",
                          "left": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "a"
                          }
                        },
                        "update": null,
                        "body": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "SequenceExpression",
                            "expressions": [
                              {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "c"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "push"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "String"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "fromCharCode"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "Literal",
                                          "value": 97,
                                          "raw": "97"
                                        },
                                        "right": {
                                          "type": "BinaryExpression",
                                          "operator": "%",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "a"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 26,
                                            "raw": "26"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "a"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Math"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "floor"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "BinaryExpression",
                                      "operator": "/",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 26,
                                        "raw": "26"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "c"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "join"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "",
                              "raw": "\"\""
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "generator": false,
                  "expression": false,
                  "async": false
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "k"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "roll_dice"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "a"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "parseInt"
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "l"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "a"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "k"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "roll_dice_fp"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "a"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "parseFloat"
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "l"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "a"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "k"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "roll_dice_str"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "l"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "k"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "roll_dice_det"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "a"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "c"
                                },
                                "init": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "q"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "a"
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "let"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "c"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "c"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "console"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "log"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "JSON"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "stringify"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "c"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "c"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "string"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "replace"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": {},
                                  "raw": "/\\{(\\w+)\\}/g",
                                  "regex": {
                                    "pattern": "\\{(\\w+)\\}",
                                    "flags": "g"
                                  }
                                },
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "b"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "d"
                                    }
                                  ],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "b"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "c"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "d"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "str"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "d"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "c"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "d"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "value"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "Number"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "isInteger"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "d"
                                              }
                                            ]
                                          },
                                          "right": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "d"
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "/",
                                              "left": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Math"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "floor"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "*",
                                                      "left": {
                                                        "type": "Literal",
                                                        "value": 100,
                                                        "raw": "100"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "d"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 0.5,
                                                      "raw": ".5"
                                                    }
                                                  }
                                                ]
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 100,
                                                "raw": "100"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "TemplateLiteral",
                                          "quasis": [
                                            {
                                              "type": "TemplateElement",
                                              "value": {
                                                "raw": "<span class=\"str\">",
                                                "cooked": "<span class=\"str\">"
                                              },
                                              "tail": false
                                            },
                                            {
                                              "type": "TemplateElement",
                                              "value": {
                                                "raw": "</span> = <b>",
                                                "cooked": "</span> = <b>"
                                              },
                                              "tail": false
                                            },
                                            {
                                              "type": "TemplateElement",
                                              "value": {
                                                "raw": "</b>",
                                                "cooked": "</b>"
                                              },
                                              "tail": true
                                            }
                                          ],
                                          "expressions": [
                                            {
                                              "type": "Identifier",
                                              "name": "b"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "d"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "generator": false,
                                  "expression": false,
                                  "async": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  }
                }
              ]
            },
            "generator": false,
            "expression": false,
            "async": false
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}