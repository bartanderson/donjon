json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[0].declarations[0].init.right.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[0].declarations[0].init.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[0].declarations[0].type = "VariableDeclarator";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[0].kind = "var";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[0].type = "VariableDeclaration";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1] = {};
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression = {};
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.left.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.left.left.raw = "0";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.left.left.type = "Literal";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.left.left.value = 0;
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.left.operator = ">";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.left.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.left.right.name = "c";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.left.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.left.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.operator = "&&";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.right.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.right.left.name = "c";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.right.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.right.operator = "=";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.right.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.right.right.raw = "0";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.right.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.right.right.value = 0;
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.right.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].expression.type = "LogicalExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[1].type = "ExpressionStatement";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[2] = {};
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[2].expression = {};
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[2].expression.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[2].expression.left.computed = false;
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[2].expression.left.object = {};
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[2].expression.left.object.name = "b";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[2].expression.left.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[2].expression.left.property = {};
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[2].expression.left.property.name = "height";
json.body[1].expression.arguments[1].body.body[10].body.body[6].consequent.consequent.body[2].expression.left.property.type = "Identifier";
