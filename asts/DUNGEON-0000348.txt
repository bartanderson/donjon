json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[0].right.right.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[0].right.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[0].type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1] = {};
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].left.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].left.left.raw = "0";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].left.left.type = "Literal";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].left.left.value = 0;
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].left.operator = ">";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].left.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].left.right.name = "c";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].left.right.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].left.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].operator = "&&";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].right.left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].right.left.name = "c";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].right.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].right.operator = "=";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].right.right = {};
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].right.right.raw = "0";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].right.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].right.right.value = 0;
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].right.type = "AssignmentExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[1].type = "LogicalExpression";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[2] = {};
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[2].left = {};
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[2].left.computed = false;
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[2].left.object = {};
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[2].left.object.name = "b";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[2].left.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[2].left.property = {};
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[2].left.property.name = "width";
json.body[1].expression.arguments[1].body.body[10].body.body[7].expression.right.consequent.expressions[2].left.property.type = "Identifier";
