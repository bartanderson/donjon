json.body[1].expression.arguments[1].body.body[13].body.body[0].declarations[2].init.type = "MemberExpression";
json.body[1].expression.arguments[1].body.body[13].body.body[0].declarations[2].type = "VariableDeclarator";
json.body[1].expression.arguments[1].body.body[13].body.body[0].kind = "let";
json.body[1].expression.arguments[1].body.body[13].body.body[0].type = "VariableDeclaration";
json.body[1].expression.arguments[1].body.body[13].body.body[1] = {};
json.body[1].expression.arguments[1].body.body[13].body.body[1].alternate = null;
json.body[1].expression.arguments[1].body.body[13].body.body[1].consequent = {};
json.body[1].expression.arguments[1].body.body[13].body.body[1].consequent.argument = {};
json.body[1].expression.arguments[1].body.body[13].body.body[1].consequent.argument.argument = {};
json.body[1].expression.arguments[1].body.body[13].body.body[1].consequent.argument.argument.raw = "1";
json.body[1].expression.arguments[1].body.body[13].body.body[1].consequent.argument.argument.type = "Literal";
json.body[1].expression.arguments[1].body.body[13].body.body[1].consequent.argument.argument.value = 1;
json.body[1].expression.arguments[1].body.body[13].body.body[1].consequent.argument.operator = "!";
json.body[1].expression.arguments[1].body.body[13].body.body[1].consequent.argument.prefix = true;
json.body[1].expression.arguments[1].body.body[13].body.body[1].consequent.argument.type = "UnaryExpression";
json.body[1].expression.arguments[1].body.body[13].body.body[1].consequent.type = "ReturnStatement";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test = {};
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.left = {};
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.left.argument = {};
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.left.argument.left = {};
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.left.argument.left.name = "h";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.left.argument.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.left.argument.operator = "&";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.left.argument.right = {};
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.left.argument.right.raw = "16";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.left.argument.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.left.argument.right.value = 16;
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.left.argument.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.left.operator = "!";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.left.prefix = true;
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.left.type = "UnaryExpression";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.operator = "||";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.right = {};
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.right.left = {};
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.right.left.name = "h";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.right.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.right.operator = "&";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.right.right = {};
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.right.right.raw = "4128769";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.right.right.type = "Literal";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.right.right.value = 4128769;
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.right.type = "BinaryExpression";
json.body[1].expression.arguments[1].body.body[13].body.body[1].test.type = "LogicalExpression";
json.body[1].expression.arguments[1].body.body[13].body.body[1].type = "IfStatement";
json.body[1].expression.arguments[1].body.body[13].body.body[2] = {};
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression = {};
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.left = {};
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.left.name = "dungeonLayout2DGrid";
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.operator = "=";
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right = {};
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.computed = true;
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object = {};
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.computed = true;
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.object = {};
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.object.name = "dungeonLayout2DGrid";
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.property = {};
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.property.left = {};
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.property.left.name = "c";
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.property.left.type = "Identifier";
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.property.operator = "+";
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.property.right = {};
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.property.right.computed = true;
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.property.right.object = {};
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.property.right.object.name = "directionRowOffsets";
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.property.right.object.type = "Identifier";
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.property.right.property = {};
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.property.right.property.name = "doorDirection";
json.body[1].expression.arguments[1].body.body[13].body.body[2].expression.right.object.property.right.property.type = "Identifier";
